<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDEA加序列化</title>
      <link href="/2019/10/29/2019-10-29-idea%E4%B8%AD%E5%8A%A0%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2019/10/29/2019-10-29-idea%E4%B8%AD%E5%8A%A0%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<blockquote><p>首先找到settings&gt;&gt;Editor&gt;&gt;inspections&gt;&gt;</p></blockquote><blockquote><p>搜索Serialization issues&gt;&gt;找到序列化id，然后OK。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190512211137358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDYxOTYxMw==,size_16,color_FFFFFF,t_70" alt="tu"></p><blockquote><p>点击对应的类，然后ALT+Enter回车。就可以设置序列化id</p></blockquote><p><img src="https://img-blog.csdnimg.cn/2019051221143626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDYxOTYxMw==,size_16,color_FFFFFF,t_70" alt="tu1"></p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序!</title>
      <link href="/2019/10/29/2019-10-29-%E6%8E%92%E5%BA%8F%E5%86%92%E6%B3%A1/"/>
      <url>/2019/10/29/2019-10-29-%E6%8E%92%E5%BA%8F%E5%86%92%E6%B3%A1/</url>
      
        <content type="html"><![CDATA[<pre><code>package day24PaiXuSuanFa;//冒泡排序：public class PaiXu {      public static void show(int []arr){          //注意此处的i从1开始；          for(int i=1;i&lt;arr.length;i++){             //在此处加上boolean为了防止数已经有序，有序时下面j的循环不进入，              // 最后那个if那个判断flag为true则结束，否则继续循环；              boolean flag =true;              for(int j=0;j&lt;arr.length-i;j++){                  if(arr[j] &gt; arr[j + 1]){                      int temp=arr[j];                      arr[j]=arr[j+1];                      arr[j+1]=temp;                      //flag=false;                  }              }              if(flag){                  break;              }          }      }    public static void main(String[] args) {        int[] brr={11,32,44,55,123,535,1432};        PaiXu.show(brr);        System.out.println(&quot;结果：&quot;);        for(int i:brr){            System.out.println(i);        }      }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计原则———线性(顺序)——二分(折半)查找！</title>
      <link href="/2019/10/29/2019-10-29-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%B8%8E%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
      <url>/2019/10/29/2019-10-29-%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99%E4%B8%8E%E7%BA%BF%E6%80%A7%E4%B8%8E%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<h3 id="设计原则："><a href="#设计原则：" class="headerlink" title="设计原则："></a>设计原则：</h3><blockquote><p>1.开闭原则：对扩展开放，对修改关闭，主要extends</p></blockquote><blockquote><p>2.里氏代换原则:任何父类课出现的地方，子类都可出现，多用继承和多态理念</p></blockquote><blockquote><p>3.依赖倒转原则：尽量多用抽象类或接口，不是具体实现类，</p></blockquote><blockquote><p>4.接口隔离原则：尽量依赖小借口，而不是大接口</p></blockquote><blockquote><p>5.迪米特法则（最少知道原则）:一个实体应当少与其他类发生关联</p></blockquote><blockquote><p>6.合成复用原则：就是例如 A类中的a需要在B类中可用，申明a在B，并且用构造传入它的引用；</p></blockquote><h3 id="线性和折半查找："><a href="#线性和折半查找：" class="headerlink" title="线性和折半查找："></a>线性和折半查找：</h3><pre><code>package day24PaiXuSuanFa;//线性查找（顺序）//从指定数组中查找参数指定的元素并返回下标；public class ChaZaoSuanFa {   //1.顺序查找（线性查找）：    public static int find(int[]arr, int num){        for(int i=0;i&lt;arr.length;i++){           if(num==arr[i]){               return i;           }        }        return -1; //查找失败    }    // 2. 二分查找法：    public static int findtwo(int[]arr,int left,int right,int tt) {        if (left&lt;=right) {            int z = (left + right)/2;            if (arr[z] == tt) {               return z;            }            if (arr[z] &gt; tt) {                return findtwo(arr, left, z - 1, tt);            }else {                return findtwo(arr, z + 1, right, tt);        }        }                return -1;    }    public static void main(String[] args) {        int []brr ={10,23,44,22,341,12,3,2,0};        int []crr = {11,22,33,44,55,66,68,77};        int a=2;        int b=68;        //2.二分代码：        int two = findtwo(crr,0,7,b);        System.out.println(&quot;二分查找到的位置是：&quot;+two);       // 1.小马编写于main上        int t= ChaZaoSuanFa.find(brr,a);        System.out.println(&quot;线性查找的位置：&quot;+t);         /*  1. 自己编于main中        for(int i=0;i&lt;brr.length;i++){            if(a==brr[i]){                System.out.println(&quot;写在main方法里的获取位置：&quot;+i);                break;            }        }*/    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线程同步机制加锁</title>
      <link href="/2019/10/28/2019-10-28-%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6%E5%8A%A0%E9%94%81/"/>
      <url>/2019/10/28/2019-10-28-%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6%E5%8A%A0%E9%94%81/</url>
      
        <content type="html"><![CDATA[<h3 id="线程同步机制："><a href="#线程同步机制：" class="headerlink" title="线程同步机制："></a>线程同步机制：</h3><blockquote><p>多个线程访问同一资源时，造成数据不一致，此时需对多个线程间进行协调。（例如：银行取钱时线程同时过去，会导致数据判断不正确，此时需将并行的的操作改为串行）</p></blockquote><h3 id="主要上锁-synchronized-方式（3种）"><a href="#主要上锁-synchronized-方式（3种）" class="headerlink" title="主要上锁(synchronized)方式（3种）:"></a>主要上锁(synchronized)方式（3种）:</h3><blockquote><p>1.在要执行的run方法下加一段<code>synchronizde（一个引用）{锁住的部分}</code>,这里面的引用需自定义一个类如下代码的<code>Demo</code>类，然后new它的对象，它的引用就是过好礼的引用;</p></blockquote><blockquote><p>第二种和第三种是相同的，只是写法不同，第二个就是直接在重写的run方法里加个<code>synchronized</code>关键字，第三种是写在run方法下的<code>synchronized（this）{锁住的代码块}</code>,里面的this从底层里可得知是线程创建的对象的直接调用run。</p></blockquote><pre><code>  Demo dm = new Demo;    @Override第二种：    public synchronized void run() {        // 在成员方法中出现this表示当前正在调用的对象，也就是acc第三种：        //synchronized(this) {            System.out.println(&quot;线程&quot; + Thread.currentThread().getName() + &quot;启动...&quot;);第一种：//synchronized(dm) {  // ok            //synchronized(new Demo()) { // error            // 模拟从银行后台数据库查询账户余额的过程            int temp = getBalance();  // temp = 1000;  temp = 1000;            // 模拟取款的操作            if(temp &gt;= 200) {                System.out.println(&quot;正在出钞，请稍后...&quot;);                try {                    Thread.sleep(10000);                } catch (InterruptedException e) {                    e.printStackTrace();                }                temp -= 200; // temp = 800; temp = 800;                System.out.println(&quot;请取走您的钞票！&quot;);            } else {                System.out.println(&quot;账户余额不足，请核对您的账户余额！&quot;);            }            // 模拟将最新的余额写入后台数据库            setBalance(temp); //balance = 800;  balance = 800;        //}    }}class Demo {}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单小聊天并记录到硬盘</title>
      <link href="/2019/10/27/2019-10-27-%E7%BA%BF%E7%A8%8B%20%E7%9B%B8%E5%85%B3%E7%9A%84%E6%96%B9%E6%B3%95%E5%8F%8A%E6%8A%80%E6%9C%AF/"/>
      <url>/2019/10/27/2019-10-27-%E7%BA%BF%E7%A8%8B%20%E7%9B%B8%E5%85%B3%E7%9A%84%E6%96%B9%E6%B3%95%E5%8F%8A%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="其中这个boolean是给里面的三目运算符赋值，不是给while循环赋值"><a href="#其中这个boolean是给里面的三目运算符赋值，不是给while循环赋值" class="headerlink" title="其中这个boolean是给里面的三目运算符赋值，不是给while循环赋值"></a>其中这个boolean是给里面的三目运算符赋值，不是给while循环赋值</h2></blockquote><pre><code>package day20;import javafx.scene.input.DataFormat;import java.io.BufferedReader;import java.io.FileOutputStream;import java.io.InputStreamReader;import java.io.PrintStream;import java.text.SimpleDateFormat;import java.util.Date;public class CharBye{    public static void main(String[] args) throws Exception{        PrintStream   ps = new PrintStream(new FileOutputStream(&quot;e:/a.txt&quot;));        BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); //其中这个boolean是给里面的三目运算符赋值，不是给while循环赋值，以免错误，导致循环结束             boolean flag=true;        while(true){            Date d = new Date();            SimpleDateFormat df = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);           // System.out.println(df.format(d));            System.out.println(df.format(d)+&quot;请&quot;+(flag?&quot;一号:&quot;:&quot;二号:&quot;)+&quot;输入发送内容：&quot;);            String ss = br.readLine();            if(&quot;bye&quot;.equalsIgnoreCase(ss)){                System.out.println(&quot;聊天结束&quot;);               break;            }           // else {            Date dd = new Date();            SimpleDateFormat ddf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;);            ps.println(ddf.format(dd)+(flag?&quot;一号:&quot;:&quot;二号:&quot;)+ ss);                flag = !flag;            //}       }        ps.close();        br.close();    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线程(Thread)的创建！</title>
      <link href="/2019/10/26/2019-10-26-%E7%BA%BF%E7%A8%8B/"/>
      <url>/2019/10/26/2019-10-26-%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>多线程技术底层原理：采用时间片轮转法实现多线程的并发执行，所谓并发就是宏观并行，微观串行;</p></blockquote><h3 id="线程的创建"><a href="#线程的创建" class="headerlink" title="线程的创建:"></a>线程的创建:</h3><blockquote><p>1.自定义类继承Thread类并重写<code>run</code>方法，创建该类的对象来调用<code>start</code>方法;</p></blockquote><blockquote><p>2.自定义类实现<code>Runnable</code>接口并重写<code>run</code>方法，创建该类的对象作为实参来构造<code>Thread</code>类的对象，使用Thread类型的对象调用<code>Strat</code>方法;</p></blockquote><h2 id="相关方法："><a href="#相关方法：" class="headerlink" title="相关方法："></a>相关方法：</h2><blockquote><p> Thread() - 使用无参的方式构造对象。</p></blockquote><blockquote><p>Thread(Runnable target) - 根据参数指定的接口引用来构造对象。</p></blockquote><blockquote><p> void run() - 若构造线程对象时使用Runnable对象，则调用该方法时最终调用                      Runnable对象指向的run方法；<br>              - 若构造该线程对象时没有使用Runnable对象，则调用该方法时啥也不做</p></blockquote><h2 id="gt-void-start-用于启动一个线程，Java虚拟机会自动调用该线程的run方法。它和main方法的线程无关，都要执行完成"><a href="#gt-void-start-用于启动一个线程，Java虚拟机会自动调用该线程的run方法。它和main方法的线程无关，都要执行完成" class="headerlink" title="&gt; void start() - 用于启动一个线程，Java虚拟机会自动调用该线程的run方法。它和main方法的线程无关，都要执行完成:"></a>&gt; void start() - 用于启动一个线程，Java虚拟机会自动调用该线程的run方法。它和<code>main</code>方法的线程无关，都要执行完成:</h2><h3 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h3><p>   -a.执行main方法的线程叫做主线程，而执行run方法的线程叫做子线程。</p><p>   -b.程序启动时只有主线程来执行main方法中的代码，当start方法调用成功之后，线程的个数由1个瞬间变成了2个，而新启动的线程去执行run方法的代码，而执行main的线程继续向下执行，两个线程各自独立运行互不影响，当run方法执行完毕后子线程结束，而当main方法执行完毕后主线程结束。</p><p>   -c.主线程和子线程的先后执行次序没有明确的规定，取决于系统的调度算法。</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PrintStream--ObjectOutPutStream--bufferReader</title>
      <link href="/2019/10/25/2019-10-25-PrintStream-Object%E6%B5%81-buffer%E6%B5%81/"/>
      <url>/2019/10/25/2019-10-25-PrintStream-Object%E6%B5%81-buffer%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h3 id="PrintStream流；"><a href="#PrintStream流；" class="headerlink" title="PrintStream流；"></a>PrintStream流；</h3><blockquote><p>java.io.PrintStream主要用于方便的打印各种数据并具有自动刷新的功能；</p></blockquote><h2 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h2><blockquote><p>PrintStream(OutPutStream out) –根据参数指定的引用来构造对象，但内部的的outputstream是抽象的，实参需传递子类的对象 </p></blockquote><blockquote><p>print和println都是讲其对象输出到文件中 </p></blockquote><h3 id="BufferReader"><a href="#BufferReader" class="headerlink" title="BufferReader:"></a>BufferReader:</h3><blockquote><p>主要用于从字符输入流中读取单个字符,字符数组及字符串；</p></blockquote><blockquote><p>print和println都是讲其对象输出到文件中 </p></blockquote><h3 id="ObjectOutPutStream"><a href="#ObjectOutPutStream" class="headerlink" title="ObjectOutPutStream:"></a>ObjectOutPutStream:</h3><blockquote><p>用于将java语言的对象整体写到输出流中，只能将支持Serializable 接口的对象写入流中;  所谓序列化 就是指将一个对象需要保存的所有相关信息有效组成字节序列的转化过程； </p></blockquote><p>Object writeObject() –</p><h3 id="ObjectInPutStream："><a href="#ObjectInPutStream：" class="headerlink" title="ObjectInPutStream："></a>ObjectInPutStream：</h3><blockquote><p>用于从输入流中将java的对象整体读取出来; 反序列化将有效组织的字节序列回复为相关文件;</p></blockquote><p> Object readObject() –用于从输入流中读取一个对象</p><h3 id="transient关键字修饰成员变量表示成员变量不参与序列化"><a href="#transient关键字修饰成员变量表示成员变量不参与序列化" class="headerlink" title="transient关键字修饰成员变量表示成员变量不参与序列化"></a>transient关键字修饰成员变量表示成员变量不参与序列化</h3><h3 id="经验分享："><a href="#经验分享：" class="headerlink" title="经验分享："></a>经验分享：</h3><blockquote><p>在开发时若希望写入多个对象，先将多个对象放到集合中，然后将集合看成一个对象整体调用一次writeObject方法写入;调用一次readObject方法可以将整个集合读取出来，避免根据返回值进行的文件莫问判断</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File类和IO流及文件拷贝</title>
      <link href="/2019/10/24/2019-10-24-File%E5%92%8CIO%E6%B5%81/"/>
      <url>/2019/10/24/2019-10-24-File%E5%92%8CIO%E6%B5%81/</url>
      
        <content type="html"><![CDATA[<h3 id="File类的代码："><a href="#File类的代码：" class="headerlink" title="File类的代码："></a>File类的代码：</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">package day17;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="built_in">File</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Fileceshi &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) throws IOException &#123;</span><br><span class="line">           <span class="built_in">File</span> f=<span class="keyword">new</span> <span class="built_in">File</span>(<span class="string">"E:/java.txt"</span>);</span><br><span class="line">           <span class="built_in">if</span>(f.<span class="built_in">exists</span>()) &#123;</span><br><span class="line">           System.out.<span class="built_in">println</span>(f.<span class="keyword">delete</span>()?<span class="string">"如果有文件就呗我删除"</span>:<span class="string">"没有就见一个呗"</span>);</span><br><span class="line">           &#125;<span class="built_in">else</span> &#123;</span><br><span class="line">           f.createNewFile();</span><br><span class="line">           System.out.<span class="built_in">println</span>(<span class="string">"创建成功一个"</span>);</span><br><span class="line">&#125;</span><br><span class="line">           </span><br><span class="line">           </span><br><span class="line">           System.out.<span class="built_in">println</span>(<span class="string">"-------------------"</span>);</span><br><span class="line">           <span class="built_in">File</span> aa=<span class="keyword">new</span> <span class="built_in">File</span>(<span class="string">"e:/shufffffffffffff/a/c/vb/b"</span>);</span><br><span class="line">           <span class="built_in">if</span>(aa.<span class="built_in">exists</span>()) &#123;</span><br><span class="line">           System.out.<span class="built_in">println</span>(aa.<span class="keyword">delete</span>()?<span class="string">"已经删除"</span>:<span class="string">"没目录"</span>);</span><br><span class="line">           &#125;<span class="built_in">else</span> &#123;</span><br><span class="line">           System.out.<span class="built_in">println</span>(aa.mkdirs()?<span class="string">"创建成功"</span>:<span class="string">"创建失败"</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">           </span><br><span class="line">           </span><br><span class="line">           </span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="IO流"><a href="#IO流" class="headerlink" title="IO流:"></a>IO流:</h3><blockquote><p>1.按读写基本单位分：字节流（以字节读写），字符流（以2 字节读写，止咳读取文本文件，只能有文字）</p></blockquote><blockquote><p>2.按数据流动方向：输入流(将文件内容输入到程序中，读)，输出流（将程序内容输出到文件，写）</p></blockquote><blockquote><p>3.节点流（直接与文件关联），包装流（需要依赖别的流）</p></blockquote><h3 id="FileOutPutStream"><a href="#FileOutPutStream" class="headerlink" title="FileOutPutStream():"></a>FileOutPutStream():</h3><p>方法：</p><p>void write（int b） –将 指定字节写入文件输出流</p><p>void write（byte[],int of,int len）–指定数组从偶读开始到len长个字节写入输出流</p><p>void write（byte[]）– 写一个数组</p><p>void close（）–关闭输出流释放资源</p><blockquote><p>要将字符串变成数组用getByte（），例：<code>ts.write(&quot;helloyou&quot;.getByte())</code>;</p></blockquote><h3 id="FileInPutStream"><a href="#FileInPutStream" class="headerlink" title="FileInPutStream():"></a>FileInPutStream():</h3><p>方法：</p><p>int read（） –读取单个字符，返回-1就读到了最后；</p><p>int read（byte[]） –读取数组，返回的是字符个数</p><p>int read（byte[],int of,len ）–读取数组里从of开始的len个字节</p><p>void close（）–关闭流</p><h3 id="文件拷贝的方法："><a href="#文件拷贝的方法：" class="headerlink" title="文件拷贝的方法："></a>文件拷贝的方法：</h3><pre><code>package day17;import java.io.FileInputStream;import java.io.FileOutputStream;public class WanSua {      public static void main(String[] args) {        try {            FileInputStream fis = new FileInputStream(&quot;e:/A.txt&quot;);            FileOutputStream fos = new FileOutputStream(&quot;d:/b.txt&quot;);         //第一种用法：            int re = 0;            while((re=fis.read())!=-1) {                fos.write(re);         //第二种用法：          int len = fis.available() ;//此关键字是将缓冲区内容一次性获取            byte [] arr =new byte[len];                 int re2=0;                while((re2=fis.read())!=-1){                    fos.write(arr);         //第三种用法:            byte [] brr =new byte[1024*8];            int re3=0;            while((re3=fis.read())!=-1) {                fos.write(brr, 0, re3);            }                }                 }                     } catch (Exception e) {            e.printStackTrace();        }      }}···</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Map集合和Exction异常</title>
      <link href="/2019/10/23/2019-10-23-Map%E9%9B%86%E5%90%88%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/2019/10/23/2019-10-23-Map%E9%9B%86%E5%90%88%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="Map集合："><a href="#Map集合：" class="headerlink" title="Map集合："></a>Map集合：</h3><blockquote><p>java.util.Map&lt;K,V&gt;集合中存取元素的基本单位是：单对元素，具体类型参数如下：<br>       K - 此映射所维护的键(Key)的类型<br>       V - 映射值(Value)的类型<br>   该集合中不能包含重复的键；每个键最多只能映射到一个值。</p></blockquote><p>实现子类主要为HashMap（）和TreeMap（）两种 ;</p><h2 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h2><blockquote><p> V put (key,value) –将key和value组成一队放入map，若有key，再放入时会覆盖原有的value，返回值为该key之前value的类型，无则返回null。</p></blockquote><blockquote><p>V get (Object key) –返回key对应的value值；无返回null；</p></blockquote><blockquote><p>boolean containKey(Object key) –判断是否含指定key值；</p></blockquote><blockquote><p>boolean containValue(Object value) –判断是否含指定value；</p></blockquote><blockquote><p>V remove (Object key) – 前面大V代表返回的删除key内容的类型，对指定key进行删除；</p></blockquote><h2 id="map遍历的三种方式："><a href="#map遍历的三种方式：" class="headerlink" title="map遍历的三种方式："></a>map遍历的三种方式：</h2><blockquote><p>toString</p></blockquote><blockquote><p>调用keySet方法（返回值是<code>set&lt;K&gt;</code>）,将map集合的key拿出来组成set集合，再用加强for打印；</p></blockquote><blockquote><p>调用entrySet方法(返回值<code>set&lt;Map.entry&lt;Integer,String&gt;&gt;</code>,将Map集合所有键值对拿出来组成集合。</p></blockquote><h3 id="Exction异常："><a href="#Exction异常：" class="headerlink" title="Exction异常："></a>Exction异常：</h3><blockquote><p>子类重写的方法不能抛出更大的异常，也不能抛出平级但不一样的异常（就是可以抛出一样的异常），可以抛出比它小的异常。</p></blockquote><blockquote><p>自定义异常：<code>throw new suoyaoExction(&quot;年纪不合理！！！&quot;)</code>,就是写在例如：<code>setAge（int a）</code>判断<code>else</code>里的，它会产生自定义异常，我们选择抛到<code>setAge（int a）</code>后加<code>throws</code>,然后构造调用方法的时候又来个异常，再抛出会到<code>new</code>出来的对象那里，这里的异常就地处理。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为何要同时重写equals（）和HashCode（）！</title>
      <link href="/2019/10/22/2019-10-22-%E9%87%8D%E5%86%99hashcode()%E5%92%8Cequals()/"/>
      <url>/2019/10/22/2019-10-22-%E9%87%8D%E5%86%99hashcode()%E5%92%8Cequals()/</url>
      
        <content type="html"><![CDATA[<h1 id="equals相等的元素，元素值相同。所以equals方法相等时，要求hashcode方法相同，因为相同的equals所对应的元素的哈希码值相同，"><a href="#equals相等的元素，元素值相同。所以equals方法相等时，要求hashcode方法相同，因为相同的equals所对应的元素的哈希码值相同，" class="headerlink" title="equals相等的元素，元素值相同。所以equals方法相等时，要求hashcode方法相同，因为相同的equals所对应的元素的哈希码值相同，"></a>equals相等的元素，元素值相同。所以equals方法相等时，要求hashcode方法相同，因为相同的equals所对应的元素的哈希码值相同，</h1><p>用同一个哈希算法算出的索引位置就相同。–这样做可以避免相同元素指向不同的哈希表的位置；</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Queue集合和set集合(HashSet(),TreeSet())！</title>
      <link href="/2019/10/21/2019-10-21-Queue%E9%9B%86%E5%90%88%E5%92%8Cset%E9%9B%86%E5%90%88/"/>
      <url>/2019/10/21/2019-10-21-Queue%E9%9B%86%E5%90%88%E5%92%8Cset%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h3 id="Queue集合："><a href="#Queue集合：" class="headerlink" title="Queue集合："></a>Queue集合：</h3><blockquote><p>此集合是collection的子集合，与set，List集合属于同级，用于描述有先进先出的数据结构（队列），其实现子类是LinkedList（）:</p></blockquote><blockquote><p>常用的方法：<br> boolean offer(E a) –将内容加入到队列中；</p></blockquote><p> E poll() –将内容从对列中头部位置取出并删除；</p><p> E peek() –返回对首部的的元素（不会像poll一样删除打印，这个就打印）</p><h3 id="set集合："><a href="#set集合：" class="headerlink" title="set集合："></a>set集合：</h3><blockquote><p>set集合相比于List集合，它插入无序，但它不可像list中一样可以重复，它是去重的。它主要有<code>HashSet（）,TreeSet（）</code>两个子类;</p></blockquote><blockquote><p>HashSet底层采用哈希表进行数据管理，</p></blockquote><blockquote><p>它放入元素过程是：需要调用<code>HashCode（）</code>得到对象的哈希码值,之后调用哈希算法得到哈希表的索引位置，放到相应的存储空间里;</p></blockquote><blockquote><p>遍历List集合所有元素方法3种：</p></blockquote><p> toString(打印所有的元素)</p><p> for each-结构将所有集合里的内容全取出来；</p><p>  Iterator-迭代器方法，hasNext（），next（）;</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HashSet()和HashMap()实现原理！</title>
      <link href="/2019/10/21/2019-10-21-zHashSet%E4%B8%8EHashMap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
      <url>/2019/10/21/2019-10-21-zHashSet%E4%B8%8EHashMap%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="HashMap-的实现原理："><a href="#HashMap-的实现原理：" class="headerlink" title="HashMap 的实现原理："></a>HashMap 的实现原理：</h3><p>HashMap是基于Hash算法实现的，<br>我们通过put（key，value）存储数据，通过get（key）来获取数据</p><p>当传入key时，HashMap会根据Key.hashCode()计算出Hash值，根据Hash值将value保存在bucket里 ，。</p><p>当计算出相同的Hash值时，我们称之为Hash冲突，HashMap 的做法是用链表和红黑树存储相同Hash值的value，<br>当hash冲突的个数比较少时，使用链表存储，<br>否则使用红黑树。</p><h3 id="HashSet-的实现原理："><a href="#HashSet-的实现原理：" class="headerlink" title="HashSet 的实现原理："></a>HashSet 的实现原理：</h3><p>HashSet是基于HashMap实现的，HashSet 底层使用HashMap来保存所有元素，</p><p>因此HashSet 的实现比较简单，相关HashSet 的操作，基本上都是直接调用底层HashMap的相关方法来完成，HashSet不允许有重复的值，并且元素是无序的。</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛型机制！</title>
      <link href="/2019/10/19/2019-10-20-%E6%B3%9B%E5%9E%8B%E6%9C%BA%E5%88%B6/"/>
      <url>/2019/10/19/2019-10-20-%E6%B3%9B%E5%9E%8B%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h3 id="泛型机制："><a href="#泛型机制：" class="headerlink" title="泛型机制："></a>泛型机制：</h3><p>泛型其实是在jdk1.5中才添加的。在jdk1.5之前我们要创建一个容器对象，是这样往里面添加内容的。</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="built_in">List</span> <span class="built_in">list</span> = <span class="literal">new</span> ArrayList();</span><br><span class="line"><span class="built_in">list</span>.add(<span class="string">"我是字符串"</span>);<span class="comment">//可以添加字符串</span></span><br><span class="line"><span class="built_in">list</span>.add(<span class="number">10.67</span>);<span class="comment">//可以添加float</span></span><br><span class="line"><span class="built_in">list</span>.add(<span class="literal">false</span>);<span class="comment">//可以添加boolean</span></span><br></pre></td></tr></table></figure><p>也就是说我们创建了一个容器之后，我们可以往里面添加任何东西，这时候就麻烦了，如果我们只想保存字符串，但是一不小心存了一个int类型的值，在输出的时候肯定会报错误的。那怎么办呢？于是乎，在jdk1.5添加了泛型机制，去规范我们输入的值。</p><p><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();</code><br>这时候我们的list就只能保存String类型的值了，如果我们保存了int类型的值，那么就会在编译期报错</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>List集合！</title>
      <link href="/2019/10/19/2019-10-20-List%E9%9B%86%E5%90%88/"/>
      <url>/2019/10/19/2019-10-20-List%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>list集合是我们collection集合的一个子集合；元素有先后放入顺序且可重复，主要实现类有<code>ArraryList,LinkList,Static,Vector</code></p></blockquote><blockquote><p>ArraryList底层是数组，访问元素方便，增删不便；<br>LinkList底层链表管理，访问不便，增删方便；<br>Strack底层数组管理，具有先进先出的特性，为栈；<br>Vectory底层数组管理，与ArraryList比属于线程安全类</p></blockquote><h3 id="List常用方法："><a href="#List常用方法：" class="headerlink" title="List常用方法："></a>List常用方法：</h3><blockquote><p>增加的方法： void add (int index，E str) –将str加入到index位置<br>删除：E remove(int index) —删除指定位置元素；<code>E</code>代表被删除的对象的类型，以此做返回值<br>修改：E set (int index ,E ele) –像index位置插入ele的str<br>查找：int indexOf() –查元素<br>E get (int index) –获取index位置的元素，返回类型时获取到的类型；</p></blockquote><h3 id="List集合的增，删，改代码："><a href="#List集合的增，删，改代码：" class="headerlink" title="List集合的增，删，改代码："></a>List集合的增，删，改代码：</h3><pre><code>import java.util.LinkedList;import java.util.List;public class ListTest {    public static void main(String[] args) {        // 1.声明List类型的引用指向实现类的对象        List lt1 = new LinkedList();        System.out.println(&quot;lt1 = &quot; + lt1); // [啥也没有]        // 2.向集合中添加元素并打印        // 向下标为0的位置插入元素one  向开头位置插入元素        lt1.add(0, &quot;one&quot;);        System.out.println(&quot;lt1 = &quot; + lt1); // [one]        // 向下标为1的位置插入元素3   向末尾位置插入元素        lt1.add(1, 3);        System.out.println(&quot;lt1 = &quot; + lt1); // [one, 3]        // 向下标为1的位置插入元素&quot;two&quot;，向中间位置插入元素        lt1.add(1, &quot;two&quot;);        System.out.println(&quot;lt1 = &quot; + lt1); // [one, two, 3]        System.out.println(&quot;--------------------------------------&quot;);        // 3.实现集合中元素的查找        // 集合中之所以可以放入不同类型的对象，是因为这些对象都被看做Object        // 类型放入的，那么取出来的元素类型也是Object类型        String str1 = (String) lt1.get(0);        System.out.println(&quot;获取到的元素是：&quot; + str1); // one        Integer it1 = (Integer) lt1.get(2);        System.out.println(&quot;获取到的元素是：&quot; + it1); // 3        System.out.println(&quot;--------------------------------------&quot;);        // 练习：使用get方法获取元素并拼接成toString方法的效果        StringBuilder sb2 = new StringBuilder();        sb2.append(&quot;[&quot;);        for(int i = 0; i &lt; lt1.size(); i++) {            if(lt1.size()-1 == i) {                sb2.append(lt1.get(i)).append(&quot;]&quot;);            } else {                // 将第一个字符串中的每个字符取出放入第二个字符串并跟随逗号                sb2.append(lt1.get(i)).append(&quot;,&quot;).append(&quot; &quot;);            }        }        System.out.println(&quot;lt1 = &quot; + sb2);        System.out.println(&quot;--------------------------------------&quot;);        // 4.实现集合中元素的修改功能        // [one, two, 3]        Integer it2 = (Integer) lt1.set(2, &quot;three&quot;);        System.out.println(&quot;下标为2的旧元素是：&quot; + it2); // 3        System.out.println(&quot;lt1 = &quot; + lt1); // [one, two, three]        System.out.println(&quot;--------------------------------------&quot;);        // 5.实现集合中元素的删除功能        String str2 = (String) lt1.remove(1);        System.out.println(&quot;被删除的元素是：&quot; + str2); // two        System.out.println(&quot;删除后集合中的元素有：&quot; + lt1); // [one, three]        System.out.println(&quot;--------------------------------------&quot;);        // 练习：使用remove方法删除集合中的所有元素        //for (int i = 0; i &lt; lt1.size(); /* i++ */) {        /*        for (int i = lt1.size()-1; i &gt;= 0; i--) {            System.out.println(&quot;被删除的元素是：&quot; + lt1.remove(i));        }        System.out.println(&quot;集合中最终的元素有：&quot; + lt1);        */        System.out.println(&quot;--------------------------------------&quot;);        // 6.获取List集合中的一部分内容，从下标0开始一直到下标1，但取不到1        List lt2 = lt1.subList(0, 1);        System.out.println(&quot;lt2 = &quot; + lt2); // [one]        lt2.set(0, 2);        System.out.println(&quot;lt2 = &quot; + lt2); // [2]        System.out.println(&quot;lt1 = &quot; + lt1); // [2, three]    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>统计字符串中大小写，数字，符号个数</title>
      <link href="/2019/10/18/2019-10-18-%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AA%E6%95%B0/"/>
      <url>/2019/10/18/2019-10-18-%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AA%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> class ChouQuZiFu &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">String</span> ss=<span class="keyword">new</span> <span class="keyword">String</span>(<span class="string">"ABCD123!@#$%ab"</span>);</span><br><span class="line"> <span class="comment">//定义数组，此数组默认给0，然后就是4个0;所以下面的arr[0]++,就是0++;</span></span><br><span class="line">        <span class="keyword">int</span> [] arr=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ss.length();i++) &#123;</span><br><span class="line">              <span class="keyword">char</span> a=ss.charAt(i);                </span><br><span class="line">     <span class="built_in">if</span>(a&gt;=<span class="string">'A'</span>&amp;&amp;a&lt;=<span class="string">'Z'</span>) &#123;</span><br><span class="line">     arr[<span class="number">0</span>]++;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">else</span> <span class="built_in">if</span>(a&gt;=<span class="string">'a'</span>&amp;&amp;a&lt;=<span class="string">'z'</span>) &#123;</span><br><span class="line">     arr[<span class="number">1</span>]++; </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">else</span> <span class="built_in">if</span>(a&gt;=<span class="string">'0'</span>&amp;&amp;a&lt;=<span class="string">'9'</span>) &#123;</span><br><span class="line">     arr[<span class="number">2</span>]++;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="built_in">else</span> &#123;</span><br><span class="line">     arr[<span class="number">3</span>]++;</span><br><span class="line">     &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          System.out.<span class="built_in">println</span>(<span class="string">"大写字母："</span>+arr[<span class="number">0</span>]+<span class="string">";小写子母："</span>+arr[<span class="number">1</span>]+<span class="string">";数字"</span>+arr[<span class="number">2</span>]+<span class="string">";符号："</span>+arr[<span class="number">3</span>]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>String，Stringbulider，Stringbuffer （String和StringBuilder可互换）</title>
      <link href="/2019/10/18/2019-10-18-String%EF%BC%8Cstringbuffer%EF%BC%8Cstringbulider/"/>
      <url>/2019/10/18/2019-10-18-String%EF%BC%8Cstringbuffer%EF%BC%8Cstringbulider/</url>
      
        <content type="html"><![CDATA[<h3 id="三者区别："><a href="#三者区别：" class="headerlink" title="三者区别："></a>三者区别：</h3><blockquote><p><code>String</code>描述的字符串是常量，一旦创建就不可更改，当程序出现大量的类似字符串都要单独存储，浪费内存，为了解决单独存储问题可用<code>StringBulider</code>来描述，该类描述是可改变的，线程的不安全的，但效率低。<code>StringBuffer</code>是线程的安全的，但效率高。</p></blockquote><h3 id="string："><a href="#string：" class="headerlink" title="string："></a>string：</h3><blockquote><p>一些string重要方法（常用的一些）：</p></blockquote><p>String（）</p><p>String(byte[]byte ,int of,int length) —用byte数组，下标从of开始到length个字节构造对象;</p><p>String(byte[]byte)—用数组构造对象; </p><blockquote><p>一些基本方法：</p></blockquote><blockquote><p>char charAt(int index) —返回字符串指定位置的字符；<br><br><br>int length()==得长度</p></blockquote><blockquote><p>boolean contains()     -是否含参数指定内容<br>String toLowerCase(),<br>String toUpperCase(),<br>String trim()          -去掉前后导的空白<br>boolean stratsWith()   -判断字符是否以括号内的开头<br>boolean endsWith()     -判断字符是否以括号内的结尾<br>boolean equals（）      -判断是否相同<br>boolean equalsIgnore（） -忽略大小写判断是否相同</p></blockquote><blockquote><p>int index of(String str) –在字符串中检索str第一次出现的位置（打印出现位置的数字），没有返回-1;<br><br>int index of(String str,int num)  —从num位置开始找：</p></blockquote><blockquote><p>String subString(int start,intend) —打印出开始到结尾的字符串<br><br>String subString(int start) —打印开始到最后所有字符串</p></blockquote><h3 id="StringBuilder"><a href="#StringBuilder" class="headerlink" title="StringBuilder:"></a>StringBuilder:</h3><blockquote><p>初始容量为16,再加上字符串的长度； </p></blockquote><blockquote><p>一些常用方法：</p></blockquote><blockquote><p>int cpacity()–返回当前容量<br><br>int length()–返回长度</p></blockquote><blockquote><p>StringBuilser中常用方法：</p></blockquote><p><br>返回值都是StringBuilder的：</p><p>insert (int of,String str)–将str插入of位置处；</p><p>append (string str)—在字符串最后加上str</p><p>delete （int start，int end）—删除从start开始到end结束的字符串</p><p>replace (int start,int end,string str)—start到end的字符串用str替换</p><p>reverse （）—字符串翻转 </p><p>int indexOf（str）—查找字符串位置  </p><h3 id="String和StringBuilder互换；"><a href="#String和StringBuilder互换；" class="headerlink" title="String和StringBuilder互换；"></a>String和StringBuilder互换；</h3><blockquote><p>从String—&gt;StringBuilder：<br>StringBuilder sb = new StringBuilder(str); </p></blockquote><blockquote><p>调用toString从StringBuilder—&gt;String：<br>String s = sb1.toString();</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sleep和wait区别！</title>
      <link href="/2019/10/18/2019-10-19-sleep%E5%92%8Cwait%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/10/18/2019-10-19-sleep%E5%92%8Cwait%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>它们最大本质的区别是:sleep()不释放同步锁,wait()释放同步锁.   </p></blockquote><blockquote><p>还有用法的上的不同是:sleep(milliseconds)可以用时间指定来使他自动醒过来,如果时间不到你只能调用interreput()来强行打断;wait()可以用notify()直接唤起.</p></blockquote><blockquote><p>sleep和wait的区别还有：</p></blockquote><p>  1。这两个方法来自不同的类分别是Thread和Object</p><p>  2。最主要是sleep方法没有释放锁，而wait方法释放了锁，使得其他线程可以使用同步控制块或者方法。</p><p>  3。wait，notify和notifyAll只能在同步控制方法或者同步控制块里面使用，而sleep可以在<br>    任何地方使用<br>   <figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">synchronized</span><span class="params">(x)</span></span>&#123;</span><br><span class="line">   x.notify()</span><br><span class="line">  <span class="comment">//或者wait()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>   4。sleep必须捕获异常，而wait，notify和notifyAll不需要捕获异常</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Object类 equals和&#39;==&#39;包装类8种</title>
      <link href="/2019/10/17/2019-10-17-string%EF%BC%8Cobject-/"/>
      <url>/2019/10/17/2019-10-17-string%EF%BC%8Cobject-/</url>
      
        <content type="html"><![CDATA[<h3 id="1-常用的包"><a href="#1-常用的包" class="headerlink" title="1.常用的包"></a>1.常用的包</h3><p>  java.lang包 - 该包是Java语言的核心包，该包中的内容由Java虚拟机自动导入。<br>              - 如：String类、System类等</p><p>  java.util包 - 该包是Java语言的工具包，该包中提供大量工具类和集合类。<br>              - 如：Scanner类、Random类等</p><p>  java.io包   - 该包是Java语言的输入输出包，该包中提供读取文件的类。<br>              - 如：FileInputStream类、FileOutputStream类等</p><p>  java.net包  - 该包是Java语言的网络包，该包中提供大量网络编程类。<br>              - 如：ServerSocket类、Socket类等<br>  java.sql包  - 操作数据库所有类和接口；  </p><h3 id="2-Object类-重点"><a href="#2-Object类-重点" class="headerlink" title="2 Object类(重点)"></a>2 Object类(重点)</h3><p>(1)基本概念</p><blockquote><p>java.lang.Object类是类层次结构的根类，任何类都是该类的直接或间接子类。</p></blockquote><p>(2)常用的方法：</p><blockquote><p>Object() - 使用无参的方式构造对象。</p></blockquote><blockquote><p>boolean equals(Object obj) - 用于判断调用对象是否与参数对象相等。<br>       - 该方法默认比较两个对象的地址，与 == 运算符的结果一致。<br>       - 若希望该方法比较两个对象的内容，则需要重写该方法。</p></blockquote><blockquote><p>int hashCode() - 用于获取调用对象的哈希码值(内存地址的编号)。<br>       - 若两个对象调用equals方法的结果相等，则各自调用hashCode方法的结果相同<br>       - 若两个对象调用equals方法的结果不相等，则各自调用该方法的结果不相同。<br>       - 因此上述两个方法中只要有一个重写，则另外一个也要重写。<br>       - 为了使得该方法的结果与equals方法保持一致，因此重写该方法。</p></blockquote><blockquote><p>String toString() - 用于获取调用对象的字符串形式。<br>       - 该方法默认返回的字符串为：包名.类名@哈希码的十六进制形式。<br>       - 为了使得该方法返回更有意义的字符串内容，需要重写该方法。<br>       - 使用print()/println()打印引用或字符串连接引用时，会自动调用该方法 </p></blockquote><h3 id="equals-与-‘-’-的比较："><a href="#equals-与-‘-’-的比较：" class="headerlink" title="equals 与 ‘==’ 的比较："></a>equals 与 ‘==’ 的比较：</h3><pre><code>&gt;equals 和 ‘==’一样是默认比较地址位；&gt;如果想比较两对象内容的话，需要重写equals方法   </code></pre><blockquote><h3 id="ctrl-shift-t看源码的类型名称"><a href="#ctrl-shift-t看源码的类型名称" class="headerlink" title="ctrl+shift+t看源码的类型名称"></a>ctrl+shift+t看源码的类型名称</h3><h3 id="ctrl-o查看源码的方法名"><a href="#ctrl-o查看源码的方法名" class="headerlink" title="ctrl+o查看源码的方法名"></a>ctrl+o查看源码的方法名</h3></blockquote><h3 id="包装类："><a href="#包装类：" class="headerlink" title="包装类："></a>包装类：</h3><p> 因为集合中只可用对象类型，我们将基本数据类型包装成对象，该种机制叫包装类。</p><blockquote><p>int_–&gt;integer</p></blockquote><blockquote><p>char–&gt;character    </p></blockquote><p>别的都是首字母变大写;</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抽象与接口</title>
      <link href="/2019/10/16/2019-10-16-%E6%8A%BD%E8%B1%A1%EF%BC%8C%E6%8E%A5%E5%8F%A3/"/>
      <url>/2019/10/16/2019-10-16-%E6%8A%BD%E8%B1%A1%EF%BC%8C%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="抽象（abstract）"><a href="#抽象（abstract）" class="headerlink" title="抽象（abstract）:"></a>抽象（abstract）:</h3><blockquote><p>不能具体实现的类，无方法体，用abstract修饰；</p></blockquote><p><br>抽象类在于继承，类继承了抽象类后需重写它的抽象方法，因为抽象类不能创建对象，所以我们测试它就可以直接调用继承它的类中重写的方法</p><h3 id="1-接口（interface）："><a href="#1-接口（interface）：" class="headerlink" title="1.接口（interface）："></a>1.接口（interface）：</h3><p> 1.接口比抽象更抽象，只能有抽象类，实现用<code>implments</code>;<br><br>  2.接口中只允许有常量，例：<code>public static final int a=1;</code> </p><h4 id="当接口类型的引用作为方法的形参传递时，实参的传递有两种："><a href="#当接口类型的引用作为方法的形参传递时，实参的传递有两种：" class="headerlink" title="当接口类型的引用作为方法的形参传递时，实参的传递有两种："></a>当接口类型的引用作为方法的形参传递时，实参的传递有两种：</h4><p> 1.自定义类实现接口并重写抽象方法，后构造自定义类的对象作为实参传递；<br> 2.使用匿名内部类的语法格式得到接口的引用作为实参传递；</p><h3 id="抽象与接口区别："><a href="#抽象与接口区别：" class="headerlink" title="抽象与接口区别："></a>抽象与接口区别：</h3><p> 1.定义：abstract（抽象）， interface（接口）；<br><br><br>2.继承抽象用<code>extends</code>,实现接口<code>implements</code><br><br><br>3.继承支持单继承，接口支持多实现；<br><br><br>4.抽象类可有成员方法，构造方法，但接口只有常量及抽象方法<br><br><br>5.抽象类加子类方法不用重写，接口加方法，子类要重写<br><br><br>6.在<code>jdk1.8</code>开始允许接口有非抽象类，但要用<code>dafault</code>修饰</p><h3 id="匿名内部类语法："><a href="#匿名内部类语法：" class="headerlink" title="匿名内部类语法："></a>匿名内部类语法：</h3><blockquote><p>接口/父类类型  引用变量名 = new 接口/父类类型（）{方法的重写}；</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java三大特性（封装，继承，多态）final</title>
      <link href="/2019/10/15/2019-10-15-java3%E7%BB%A7%E6%89%BF%E6%8E%A5%E5%8F%A3/"/>
      <url>/2019/10/15/2019-10-15-java3%E7%BB%A7%E6%89%BF%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="1-封装："><a href="#1-封装：" class="headerlink" title="1.封装："></a>1.封装：</h1><p> 1.就是将一些逻辑代码和实现的细节封到一个类里，隐藏细节，外部不能随便修改或调用，需要声明对象的引用来调用，可以提高代码的复用性.比如在测试类里<br></p></blockquote><h3 id="2-实现流程："><a href="#2-实现流程：" class="headerlink" title="2.实现流程："></a>2.实现流程：</h3> <figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>私有化成员变量用<span class="keyword">private</span>修饰</span><br><span class="line"><span class="number">2.</span>公有<span class="keyword">set</span>与<span class="keyword">get</span>方法，在<span class="keyword">set</span>里进行合理值判断</span><br><span class="line"><span class="number">3.</span>创建无参和有参构造，在有参里进行<span class="keyword">set</span>的判断</span><br></pre></td></tr></table></figure><h3 id="static修饰时变成类层级，用类名-调用"><a href="#static修饰时变成类层级，用类名-调用" class="headerlink" title="static修饰时变成类层级，用类名.调用"></a>static修饰时变成类层级，用类名.调用</h3><blockquote><h1 id="2-继承（extends）："><a href="#2-继承（extends）：" class="headerlink" title="2.继承（extends）："></a>2.继承（extends）：</h1><p>1.多个类有相同的部分，将同样的部分放到父类，子类都包含自己独有的方法，然后继承父类的相同的方法，实现代码通用编程。子类需要重写父类的方法@override注释然后super.show()调用。<br><br>重写原则：1.方法名一样，参数列表及返回值相同2.访问权限不能变小可同级或变大3.子类重写方法不可抛出更大异常</p></blockquote><hr><p>继承注意：</p><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> 子类可以继承私有成员变量，不可继承父类构造方法与私有成员方法</span><br><span class="line"><span class="number">2.</span>支持单继承</span><br><span class="line"><span class="number">3.</span>继承满足：子类is a父类</span><br><span class="line"><span class="number">4.</span>构造子类对象都会调用父类构造来将方法初始化</span><br></pre></td></tr></table></figure><h3 id="访问控制符："><a href="#访问控制符：" class="headerlink" title="访问控制符："></a>访问控制符：</h3><p>public:可在任意处使用，无论自己包或别的包<br><br>protected：只可以在本类中使用，其他的包不可以<br><br>默认： 只在本类的内部和本包中的类<br>private：仅在本类的内部使用</p><blockquote><h1 id="多态："><a href="#多态：" class="headerlink" title="多态："></a>多态：</h1><p>有继承，重写，父类引用指向子类对象<br>意义：屏蔽不同子类的差异实现通用的编程</p></blockquote><hr><p>当父类的引用指向子类的对象时，可直接调用父类方法，若想调用子类对象需强转。例：</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">Person p = <span class="keyword">new</span> <span class="type">Worker</span>();</span><br><span class="line"><span class="comment">//调worker内的独有方法salary,强转。</span></span><br><span class="line">((worker)p).salary();</span><br></pre></td></tr></table></figure><p>强转判断：</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">//此处person不转，worker需强转；</span></span><br><span class="line"><span class="selector-tag">if</span>(p instanceof person)&#123;</span><br><span class="line">     <span class="selector-tag">syso</span>..(<span class="string">"不用转"</span>)</span><br><span class="line">&#125;<span class="selector-tag">syso</span>..(<span class="string">"需要强转"</span>)</span><br></pre></td></tr></table></figure><h1 id="多态的三种实现："><a href="#多态的三种实现：" class="headerlink" title="多态的三种实现："></a>多态的三种实现：</h1><p>//父类指向子类</p><p>1.Person p = new Worker（）;</p><hr><p>2.//写个静态方法将父类当形参放入，用类名.此静态方法名（new 子类对象来调用）<br><br></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span>&#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">father</span><span class="params">(Person p)</span></span>&#123;</span><br><span class="line">        <span class="comment">//调用子类的show方法</span></span><br><span class="line">       p.show();</span><br><span class="line">    &#125;</span><br><span class="line">  main。。。。&#123;</span><br><span class="line">      R.father(<span class="keyword">new</span> Worker(<span class="number">20</span>,<span class="string">"kk"</span>,<span class="number">1234</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>3.接口的实现方法：<br>因为接口比抽象类更抽象，不能new对象，因此不能用2方法中那样的形式new个对象，那么我们就需要定义一个类来实现这个接口，<br>用类名.调用的时候<code>TestA.test(new shixianA());</code></p><p>比如两个接口类叫metal和gold，然后写monet类实现它两个，会重写他两，之后在测试类里，</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">//有点像定义一个父类实现多个子类的形式；</span></span><br><span class="line">Money  m = <span class="keyword">new</span> <span class="type">Metal</span>();</span><br><span class="line">Money  m = <span class="keyword">new</span> <span class="type">Gold</span>();</span><br></pre></td></tr></table></figure><blockquote><h1 id="final："><a href="#final：" class="headerlink" title="final："></a>final：</h1></blockquote><figure class="highlight d"><table><tr><td class="code"><pre><span class="line">修饰类：不能被继承，防止滥用<span class="built_in">string</span>，stystem</span><br><span class="line">修饰成员方法：不可被重写</span><br><span class="line">修饰成员变量：必须赋初值变常量</span><br><span class="line">开发很少用<span class="keyword">static</span>或<span class="keyword">final</span>单用</span><br><span class="line">一般<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">double</span>=<span class="number">3.11</span>；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSH与SSM的区别</title>
      <link href="/2019/10/15/2019-10-15-ssh%EF%BC%8Cssm%E5%8C%BA%E5%88%AB/"/>
      <url>/2019/10/15/2019-10-15-ssh%EF%BC%8Cssm%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">SSH ： Struts2+Spring+Hibernate</span><br><span class="line"></span><br><span class="line">SSM： Spring+SpringMVC+mybatis</span><br><span class="line"></span><br><span class="line"><span class="keyword">spring</span> 底层的类库是一样的（组件）</span><br><span class="line"></span><br><span class="line">Struts2和 Spring MVC的相同点：<span class="keyword">spring</span>用来初涉依赖注入（通过管理注释来控制各层的组件（方法）），<span class="number">2</span> 事物 权限 日志 ‍这些都是aop（切面编程）</span><br><span class="line"></span><br><span class="line">不同： Struts2和<span class="keyword">spring</span> mvc 控制器 试图 模型 机制不一样。Struts2是action级别的，<span class="keyword">spring</span> mvc 既然有mvc 就是把 界面层（三层架构）分的更细，实现web api 更方便。Struts漏洞一个接一个，这点就不好了(如果有大佬吧struts2封装改写一部分也不错 )，<span class="keyword">spring</span> 不清楚 哈哈。但是<span class="keyword">spring</span> mvc 配置简单一些， 理解起来很容易，结构清晰</span><br><span class="line"></span><br><span class="line">拦截器：Struts是类控制，一个功能下来就是一个类。。， <span class="keyword">spring</span> mvc 是方法，你可以理解为每个方法都是url，都可以控制.</span><br><span class="line"></span><br><span class="line">不同点其实还有很多...慢慢体会吧。</span><br><span class="line"></span><br><span class="line">Hibernate和mybatis的区别：</span><br><span class="line">这个的话自己去百度找csdn ，多看看一样的文章然后找答案。你给 移植，维护，性能，缓存 等等各方面去比较。</span><br><span class="line"></span><br><span class="line">hibernate 没玩过， mybatis 比较简单，直接上手。 可以用工具生成映射文件（主要维护这个），数据库表变了直接在mapper 改sql 就行，不同的数据库 要写不同的sql，这个就有点麻烦。主要的问题还是 配置，开始可能要折腾一段时间，习惯了就<span class="number">666</span>了。</span><br><span class="line">我是给net转过来的，拿起ssm 就开搞，配置遇到不少坑，慢慢来。反正我上手挺快。orm框架用起来 主要时间花在配置上，代码量少了很多。</span><br><span class="line">是不是大项目看需求，看公司，和团队技术。目前是用ssm的比较多 ，其实<span class="number">2</span>个框架都可以看看和学习，先学会使用，然后再看底层是怎么实现的。如果真要上手搞项目还是跟主流吧。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码块的执行顺序</title>
      <link href="/2019/10/14/2019-10-14-/"/>
      <url>/2019/10/14/2019-10-14-/</url>
      
        <content type="html"><![CDATA[<h3 id="代码块执行顺序"><a href="#代码块执行顺序" class="headerlink" title="代码块执行顺序:"></a>代码块执行顺序:</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DaiMaKuaiTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"构造代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DaiMaKuaiTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"构造函数"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"普通代码块"</span>);</span><br><span class="line"></span><br><span class="line">        DaiMaKuaiTest daiMaKuaiTest = <span class="keyword">new</span> DaiMaKuaiTest();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br>静态代码块-<br>普通代码块-<br>构造代码块-<br>构造函数；</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现一行代码推本地git到远程仓库</title>
      <link href="/2019/10/11/2019-10-11-pythongit/"/>
      <url>/2019/10/11/2019-10-11-pythongit/</url>
      
        <content type="html"><![CDATA[<h1 id="普通的方式"><a href="#普通的方式" class="headerlink" title="普通的方式"></a>普通的方式</h1><p>刚刚学会git的你想要将你修改的code的文件push到远程仓库中的时候</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">add </span>.</span><br><span class="line"><span class="symbol">git</span> commit -m<span class="string">"本次修改就是啥也没动"</span></span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>origin master</span><br></pre></td></tr></table></figure><p>首先我们需要一个操作系统的OS模块</p><figure class="highlight moonscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"> 调用<span class="built_in">os</span>的system方法</span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">'git add .'</span>)</span><br><span class="line"> 这里的参数就相当于在终端中输入的命令</span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">'git commit -m\"python auto push\"'</span>)</span><br><span class="line"> 你可以自己定义自己的 commit 说明内容</span><br><span class="line"><span class="built_in">os</span>.system(<span class="string">'git push origin master'</span>)</span><br></pre></td></tr></table></figure><p> 最后push到对应的远程库中的某个分之中,就成了<br>编辑文件后,将文件保存为.py格式,everydaypush.py<br>存到你的git库的根目录中<br>在终端中执行:</p><p>python3 everydaypush.py<br><img src="https://victorfengming.github.io/images/posts/python/python-auto-git-push.png" alt="w"></p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>this关键字 java传参方式 费氏数列递归/推</title>
      <link href="/2019/10/11/2019-10-11-four/"/>
      <url>/2019/10/11/2019-10-11-four/</url>
      
        <content type="html"><![CDATA[<h1 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h1><p>-在构造中表示当前正在构造的对象</p><p>-在成员方法中表示调用的对象</p><h1 id="java传参方式"><a href="#java传参方式" class="headerlink" title="java传参方式"></a>java传参方式</h1><p>1.当传的是基本数据类型时，形参改变实参不会跟着改变；</p><p>2.传引用数据类型时，形参改变会影响到实参一起变，因为他们的栈区指向同一块堆区；</p><hr><h1 id="递归自己调自己"><a href="#递归自己调自己" class="headerlink" title="递归自己调自己"></a>递归自己调自己</h1><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">//费氏数列递归</span></span><br><span class="line"> <span class="comment">//1 1 2 3 5 8 13 21 34.....</span></span><br><span class="line"> <span class="comment">//递归 </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FeiShiDiGui</span> &#123;</span><br><span class="line">             <span class="function"><span class="keyword">int</span> <span class="title">show</span>(<span class="params"><span class="keyword">int</span> n</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>)&#123;</span><br><span class="line">                           <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> show(n<span class="number">-1</span>)+show(n<span class="number">-2</span>);</span><br><span class="line">       <span class="comment">//递推</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show1</span>(<span class="params"><span class="keyword">int</span> n</span>)</span> &#123;</span><br><span class="line">       <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">       <span class="keyword">int</span> b=<span class="number">1</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++) &#123;</span><br><span class="line">              <span class="keyword">int</span> c=a+b;</span><br><span class="line">              a=b;</span><br><span class="line">              b=c;</span><br><span class="line">           &#125; </span><br><span class="line">              <span class="keyword">return</span> b;</span><br><span class="line">         &#125;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">FeiShiDiGui fsdg=<span class="keyword">new</span> FeiShiDiGui();</span><br><span class="line"><span class="keyword">int</span> i=fsdg.show(<span class="number">6</span>);</span><br><span class="line">              <span class="keyword">int</span> ii=fsdg.show(<span class="number">6</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(i);</span><br><span class="line">              System.<span class="keyword">out</span>.println(ii);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">             &#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DiGui</span> &#123;</span><br><span class="line"><span class="comment">//递推实现5的阶乘</span></span><br><span class="line"><span class="comment">//      int show(int n) &#123;</span></span><br><span class="line"><span class="comment">//      int res=1;</span></span><br><span class="line"><span class="comment">//      for(int i=1;i&lt;=n;i++) &#123;</span></span><br><span class="line"><span class="comment">//      res*=i;</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//      return res;     </span></span><br><span class="line"><span class="comment">//      &#125;     </span></span><br><span class="line">       <span class="comment">//递归实现5的阶乘</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">show</span>(<span class="params"><span class="keyword">int</span> m</span>)</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span>==m) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> m*show(m<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">DiGui dg=<span class="keyword">new</span> DiGui();</span><br><span class="line"><span class="keyword">int</span> ii=dg.show(<span class="number">5</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(ii);</span><br><span class="line">           </span><br><span class="line">          &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下MongBD从官网下载速度很慢解决办法</title>
      <link href="/2019/10/10/2019-10-09-two/"/>
      <url>/2019/10/10/2019-10-09-two/</url>
      
        <content type="html"><![CDATA[<blockquote><h2 id="Mongodb下载地址："><a href="#Mongodb下载地址：" class="headerlink" title="Mongodb下载地址："></a><a href="https://www.mongodb.com/download-center/community" target="_blank" rel="noopener">Mongodb下载地址：</a></h2><p><img src="https://img-blog.csdnimg.cn/20190422155040994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNDMwMDgz,size_16,color_FFFFFF,t_70" alt="tu"></p></blockquote><blockquote><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>1.使用cmd命令ping dl.mongodb.org得到ip地址。<br><img src="https://img-blog.csdnimg.cn/20190422155122433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNDMwMDgz,size_16,color_FFFFFF,t_70" alt="tu1"></p></blockquote><blockquote><h2 id="2-修改C-Windows-System32-drivers-etc-下hosts文件在末尾加上-52-206-222-245-dl-mongodb-org。重新打开浏览器下载。"><a href="#2-修改C-Windows-System32-drivers-etc-下hosts文件在末尾加上-52-206-222-245-dl-mongodb-org。重新打开浏览器下载。" class="headerlink" title="2.修改C:\Windows\System32\drivers\etc\ 下hosts文件在末尾加上 52.206.222.245 dl.mongodb.org。重新打开浏览器下载。"></a>2.修改C:\Windows\System32\drivers\etc\ 下hosts文件在末尾加上 52.206.222.245 dl.mongodb.org。重新打开浏览器下载。</h2></blockquote><p>这里必须将浏览器关闭重新才会生效<br>配置中的ip要根据自己ping到的是什么就填什么<br><img src="https://img-blog.csdnimg.cn/20190422155401376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNDMwMDgz,size_16,color_FFFFFF,t_70" alt="tu2"></p><blockquote><h2 id="3-再进行下载查看速度会有明显变化"><a href="#3-再进行下载查看速度会有明显变化" class="headerlink" title="3.再进行下载查看速度会有明显变化"></a>3.再进行下载查看速度会有明显变化</h2><p><img src="https://img-blog.csdnimg.cn/20190422155505874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzNDMwMDgz,size_16,color_FFFFFF,t_70" alt="tu4"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oracle，mysql，redis，mondodb的特点及优缺</title>
      <link href="/2019/10/10/2019-10-10-three/"/>
      <url>/2019/10/10/2019-10-10-three/</url>
      
        <content type="html"><![CDATA[<blockquote><h1 id="关系型数据库oracle–mysql"><a href="#关系型数据库oracle–mysql" class="headerlink" title="关系型数据库oracle–mysql"></a>关系型数据库oracle–mysql</h1></blockquote><h3 id="一、mysql与Oracle的相同点："><a href="#一、mysql与Oracle的相同点：" class="headerlink" title="一、mysql与Oracle的相同点："></a>一、mysql与Oracle的相同点：</h3><p>1、都是关系型数据库管理系统(MySQL开放源码)</p><p>2、都是目前很流行的数据库（Oracle以分布式为核心）；</p><h3 id="二、MySQL、Oracle各自特点："><a href="#二、MySQL、Oracle各自特点：" class="headerlink" title="二、MySQL、Oracle各自特点："></a>二、MySQL、Oracle各自特点：</h3><p>1、Oracle自身特点：</p><p>（1）、完整的数据管理功能：</p><p>1）、数据的大量性；</p><p>2）、数据的保存的持久性；</p><p>3）、数据的共享性；</p><p>4）、数据的可靠性；</p><p>2.MySQL自身特点：<br>       MySQL因为其速度、可靠性和适应性而备受关注。大多数人<br>       都认为在不需要事务化处理的情况下，MySQL是管理内容最好的选择。</p><blockquote><h2 id="三、两者数据库不同点："><a href="#三、两者数据库不同点：" class="headerlink" title="三、两者数据库不同点："></a>三、两者数据库不同点：</h2></blockquote><p>1.单引号的处理 Mysql里可以用双引号包起字符串，Oracle里只可以用单引号包起字符串。在插入和修改字符串前必须做单引号的替换：把所有出现的一个单引号替换成两个单引号。</p><p>2.自动增长的数据类型处理 Mysql是一个自动增长的数据类型，插入数据的时候，不需要管理，它自己会自动增长，Oracle不支持自动增长的数据类型，通过建立一个自动增长的序列号来完成自动增长。</p><p>3.sql语句的扩展和灵活性 Mysql对sql语句有很多非常实用而方便的扩展，比如limit功能，insert可以一次插入多行数据，select某些管理数据可以不加from。 Oracle在这方面感觉更加稳重传统一些。</p><p>4.事物提交方式 oracle默认不自动提交，需要用户手动提交。 Mysql默认是自动提交。不支持事物。 Mysql默认自动提交，也就是你提交一个query，它就直接执行，我们可以通过</p><p>set autocommit=0 禁止自动提交<br>set autocommit=1 开启自动提交</p><p>5.Oracle是大型数据库而Mysql是中小型数据库，Oracle市场占有率达40%，Mysql只有20%左右，同时Mysql是开源的而Oracle价格非常高。</p><p>6.Oracle支持大并发，大访问量，是OLTP(On-Line Transaction Processing联机事务处理系统)最好的工具。</p><p>7.安装所用的空间差别也是很大的，Mysql安装完后才152M而Oracle有3G左右，且使用的时候Oracle占用特别大的内存空间和其他机器性能。</p><p>8.长字符串的处理 长字符串的处理ORACLE也有它特殊的地方。INSERT和UPDATE时最大可操作的字符串长度小于等于4000个单字节, 如果要插入更长的字符串, 请考虑字段用CLOB类型，方法借用ORACLE里自带的DBMS_LOB程序包。插入修改记录前一定要做进行非空和长度判断，不能为空的字段值和超出长度字段值都应该提出警告,返回上次操作。</p><p>9.空字符的处理 Mysql的非空字段也有空的内容，ORACLE里定义了非空字段就不容许有空的内容。按Mysql的NOT NULL来定义Oracle表结构, 导数据的时候会产生错误。因此导数据时要对空字符进行判断，如果为NULL或空字符，需要把它改成一个空格的字符串。</p><p>10.字符串的模糊比较 Mysql里用 字段名 like ‘%字符串%’;<br>Oracle里也可以用 字段名 like ‘%字符串%’ 但这种方法不能使用索引, 速度不快。</p><p>11.翻页的SQL语句的处理<br>MySQL处理翻页的SQL语句比较简单，用LIMIT开始位置，记录个数；PHP里还可以用 SEEK定位到结果集的位置。Oracle处理翻页的SQL语句就比较繁琐了。每个结果集只有一个ROWNUM字段标明它的位置，并且只能用ROWNUM&lt;100，不能用ROWNUM&gt;80。</p><blockquote><h1 id="菲关系型数据库redis–mongo"><a href="#菲关系型数据库redis–mongo" class="headerlink" title="菲关系型数据库redis–mongo"></a>菲关系型数据库redis–mongo</h1></blockquote><h2 id="1-Redis-是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。分布式文件存储数据库，多用于集群介于关系型与非关系型之间，用c-编写，为web提供可扩展的高性能存储方案。多作为缓存使用"><a href="#1-Redis-是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。分布式文件存储数据库，多用于集群介于关系型与非关系型之间，用c-编写，为web提供可扩展的高性能存储方案。多作为缓存使用" class="headerlink" title="1.Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。分布式文件存储数据库，多用于集群介于关系型与非关系型之间，用c++编写，为web提供可扩展的高性能存储方案。多作为缓存使用"></a>1.Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。分布式文件存储数据库，多用于集群介于关系型与非关系型之间，用c++编写，为web提供可扩展的高性能存储方案。多作为缓存使用</h2><p>Redis 与其他 key - value 缓存产品有以下三个特点：</p><p>1.Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。</p><p>2.Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，string，zset，hash等数据结构的存储。</p><p>3.Redis支持数据的备份，即master-slave模式的数据备份。</p><h3 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h3><p>1.如果内存增长过快，需要定期删除数据。<br>2.如果进行完整重同步，由于需要生成rdb文件，并进行传输，会占用主机的CPU，并会消耗现网的带宽。不过redis2.8版本，已经有部分重同步的功能，但是还是有可能有完整重同步的。比如，新上线的备机。<br>3.修改配置文件，进行重启，将硬盘中的数据加载进内存，时间比较久。在这个过程中，redis不能提供服务。</p><h2 id="2-mongodb"><a href="#2-mongodb" class="headerlink" title="2.mongodb"></a>2.mongodb</h2><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。查询与索引方式灵活，是最像SQL的Nosql。支持复制集、主备、互为主备、自动分片等特性</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。</p><h3 id="与关系型比较"><a href="#与关系型比较" class="headerlink" title="与关系型比较"></a>与关系型比较</h3><p>1.mongodb不支持事务操作。<br>2.mongodb占用空间过大。<br>3.MongoDB没有如MySQL那样成熟的维护工具，这对于开发和IT运营都是个值得注意的地方。</p><blockquote><h2 id="Mongodb与redis相比较："><a href="#Mongodb与redis相比较：" class="headerlink" title="Mongodb与redis相比较："></a>Mongodb与redis相比较：</h2><p>mongoDB 源码语言是C++,redis也是C或C++,</p></blockquote><p>mongodb 文件存储是BSON格式类似JSON，或自定义的二进制格式。</p><p>mongodb与redis性能都很依赖内存的大小，mongodb 有丰富的数据表达、索引；最类似于关系数据库，支持丰富的查询语言，redis数据丰富，较少的IO ，这方面mongodb优势明显。</p><p>mongodb不支持事物，靠客户端自身保证，redis支持事物，比较弱，仅能保证事物中的操作按顺序执行，这方面 redis优于mongodb。</p><p>mongodb对海量数据的访问效率提升，redis 较小数据量的性能及运算,这方面 mongodb性能优于redis .monbgodb 有mapredurce功能，提供数据分析，redis 没有 ，这方面 mongodb优于redis 。</p>]]></content>
      
      
      <categories>
          
          <category> 19年10月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国庆回来的第一天，继续数据库</title>
      <link href="/2019/10/08/2019-10-08-one/"/>
      <url>/2019/10/08/2019-10-08-one/</url>
      
        <content type="html"><![CDATA[<br>]]></content>
      
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装nodejs后改成cnpm时配置环境变量问题</title>
      <link href="/2019/09/28/2019-9-28-cpmn/"/>
      <url>/2019/09/28/2019-9-28-cpmn/</url>
      
        <content type="html"><![CDATA[<br><h1 id="今天安装nodejs时安装cnpm，但是在命令行测试cnpm-v时-遇到文件不能被找到情况，配置环境变量到我的电脑的属性里-不是将cnpm中bin目录配置到path变量中，那样没用，我们需将bin目录的上两层目录的地址配置到path变量，即可执行。"><a href="#今天安装nodejs时安装cnpm，但是在命令行测试cnpm-v时-遇到文件不能被找到情况，配置环境变量到我的电脑的属性里-不是将cnpm中bin目录配置到path变量中，那样没用，我们需将bin目录的上两层目录的地址配置到path变量，即可执行。" class="headerlink" title="今天安装nodejs时安装cnpm，但是在命令行测试cnpm -v时 遇到文件不能被找到情况，配置环境变量到我的电脑的属性里 不是将cnpm中bin目录配置到path变量中，那样没用，我们需将bin目录的上两层目录的地址配置到path变量，即可执行。"></a>今天安装nodejs时安装cnpm，但是在命令行测试cnpm -v时 遇到文件不能被找到情况，配置环境变量到我的电脑的属性里 不是将cnpm中bin目录配置到path变量中，那样没用，我们需将bin目录的上两层目录的地址配置到path变量，即可执行。</h1><hr><h2 id="安装nodejs到配置下载路径详解"><a href="#安装nodejs到配置下载路径详解" class="headerlink" title="安装nodejs到配置下载路径详解"></a><a href="https://blog.csdn.net/wjnf012/article/details/80422313" target="_blank" rel="noopener">安装nodejs到配置下载路径详解</a></h2><h2 id="配置cnpm的path详解"><a href="#配置cnpm的path详解" class="headerlink" title="配置cnpm的path详解"></a><a href="https://blog.csdn.net/u011095110/article/details/85296607" target="_blank" rel="noopener">配置cnpm的path详解</a></h2>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第27天，表单验证，闭包</title>
      <link href="/2019/09/26/2019-9-10-twenty-seven/"/>
      <url>/2019/09/26/2019-9-10-twenty-seven/</url>
      
        <content type="html"><![CDATA[<h3 id="表单验证："><a href="#表单验证：" class="headerlink" title="表单验证："></a>表单验证：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        input &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 38px;</span><br><span class="line">            line-height: 38px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>JS实例 表单验证<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">acotin</span>=<span class="string">"1.php"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">name</span>=<span class="string">"regForm"</span> <span class="attr">onsubmit</span>=<span class="string">"return checkForm()"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>邮箱:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pass"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>确认密码:<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"repass"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注 册"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//验证表单的函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">checkForm</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//验证邮箱   12-3@qq.com  .com  .con.cn</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> email = <span class="built_in">document</span>.regForm.email.value;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (email.search(<span class="regexp">/^[\w-]+@[\w-]+(\.\w+)&#123;1,3&#125;$/</span>) === <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'邮箱格式有误!'</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//验证用户名  6-12为的数字字母下划线</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> username = <span class="built_in">document</span>.regForm.username.value;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (username.match(<span class="regexp">/^&#123;6,12&#125;$/</span>) === <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'用户名必须是6-12位的数字,字母,下划线'</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//验证密码  长度必须是6-18为</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> password = <span class="built_in">document</span>.regForm.pass.value;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (password.length &lt; <span class="number">6</span> || password.length &gt; <span class="number">18</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'密码长度必须是6-18位'</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//验证 确认密码</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> repass = <span class="built_in">document</span>.regForm.repass.value;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (repass !== password) &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'两次密码不一致'</span>);</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>###　闭包</p><p>```<br><!DOCTYPE html></p><html lang="en"><head><meta name="generator" content="Hexo 3.9.0">    <meta charset="UTF-8">    <title>Document</title>    <style>        #box {            width: 300px;            height: 300px;            background: red;        }<pre><code>    #son {        width: 100px;        height: 100px;        background: green;    }&lt;/style&gt;</code></pre></head><body>    <ul>        <li>鹅鹅鹅</li>        <li>曲项用刀割</li>        <li>拔毛用开水</li>        <li>炖鹅用大锅</li>    </ul>    <button>第一句诗</button>    <button>第二句诗</button>    <button>第三句诗</button>    <button>第四句诗</button>    <div id="box">        <div id="son"></div>    </div>    <font id="show" size="6"></font></body><script>    var bts = document.getElementsByTagName('button');    var lis = document.getElementsByTagName('li');    for (var i = 0; i < bts.length; i++) {        (function(i) {            bts[i].onclick = function() {                alert(lis[i].innerHTML);            }        })(i)    }<pre><code>// for (var i = 0; i &lt; bts.length; i++) {//     bts[i].index = i;//     bts[i].onclick = function() {//         alert(lis[this.index].innerHTML);//     }// }/*    onmouseover  onmouseenter    onmouseout   onmouseleave    区别:鼠标在上层元素时，不触发离开事件*/var box = document.getElementById(&apos;box&apos;);/*box.onmouseover = function(){    console.log(&apos;进入&apos;);}box.onmouseout = function(){    console.log(&apos;退出&apos;);}*/// box.onmouseenter = function() {//     console.log(&apos;进入&apos;);// }// box.onmouseleave = function() {//     console.log(&apos;退出&apos;);// }var message = &apos;Javascript&apos;;var i = 0;setInterval(function() {    if (i &gt;= message.length) i = 0;    document.getElementById(&apos;show&apos;).innerHTML = show(i, message);    i++;}, 100);function show(i, str) {    var tmp = str.substr(0, i);    tmp += &apos;&lt;font color=red size=7&gt;&apos; + str[i] + &apos;&lt;/font&gt;&apos;;    tmp += str.substr(i + 1);    return tmp;}</code></pre><p></script></p></html>｀｀｀ </style></head></html>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL与oracle安装</title>
      <link href="/2019/09/26/2019-9-26-fourty-two/"/>
      <url>/2019/09/26/2019-9-26-fourty-two/</url>
      
        <content type="html"><![CDATA[<br><blockquote><h1 id="MySQL和Oracle的安装"><a href="#MySQL和Oracle的安装" class="headerlink" title="MySQL和Oracle的安装"></a>MySQL和Oracle的安装</h1></blockquote><h3 id="1-mysql首先下载安装包之后按教程链接安装并测试。其中配置path环境很重要得注意。"><a href="#1-mysql首先下载安装包之后按教程链接安装并测试。其中配置path环境很重要得注意。" class="headerlink" title="1.mysql首先下载安装包之后按教程链接安装并测试。其中配置path环境很重要得注意。"></a>1.mysql首先下载安装包之后按教程链接安装并测试。其中配置path环境很重要得注意。</h3><blockquote><blockquote><p><a href="https://blog.csdn.net/bobo553443/article/details/81383194" target="_blank" rel="noopener">mysql安装详解</a></p></blockquote></blockquote><h3 id="2-oracle安装使用的安装包比较简洁自动配置的环境直接可用，顺带安装个sqldevelop可视工具。"><a href="#2-oracle安装使用的安装包比较简洁自动配置的环境直接可用，顺带安装个sqldevelop可视工具。" class="headerlink" title="2.oracle安装使用的安装包比较简洁自动配置的环境直接可用，顺带安装个sqldevelop可视工具。"></a>2.oracle安装使用的安装包比较简洁自动配置的环境直接可用，顺带安装个sqldevelop可视工具。</h3><blockquote><blockquote><p><a href="https://blog.csdn.net/Rose1645/article/details/80404736" target="_blank" rel="noopener">Oracal安装卸载</a></p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观后感</title>
      <link href="/2019/09/26/2019-9-26-lookingafter/"/>
      <url>/2019/09/26/2019-9-26-lookingafter/</url>
      
        <content type="html"><![CDATA[<br><blockquote><h2 id="观后感"><a href="#观后感" class="headerlink" title="观后感"></a>观后感</h2></blockquote><p>   二十世纪初期的中国，正处于命运的危难时刻  帝国<br>主义列强虎视眈眈，妄图灭我中华，瓜分我领土。一些有识<br>之士纷纷行动，寻求救国之路。其中伟大的革命先行者孙中<br>山先生领导了辛亥革命，推翻了中国二千多年的封建帝制。<br>然而这一革命的果实却又被袁世凯窃取。紧接而来的军阀混<br>战，更进一步的加剧了人民的苦难。<br><br></p><p> “弱国无外交” ，告<br>诉了人民在这个弱肉强食的世界，想自救就必须自强。</p><br>而中国共产党就是在这个时候诞生的。它应允了历史的要求，应允了民族的要求。它的诞生，给中国带来了希望，给人民带来了光明，为中国革命开辟了一条前所未有的道路。从此，在中国共产党领导下的中国人民， 开始了艰苦的斗争，最终终于实现了人民当家作主的愿望，劳动人民翻身做了主人。<br><p> 在新中国成立70周年之际，我热血沸腾，思绪澎湃。70周年的种种变化让我感慨多多，而我的感慨只是千千万万国人生活中的一个小小缩影，千言万语道不尽我对您的爱，表不尽对你的情，‘我的祖国，我爱您！中国我爱您！！！’</p>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL和Oracle的区别</title>
      <link href="/2019/09/24/2019-9-24-fourty/"/>
      <url>/2019/09/24/2019-9-24-fourty/</url>
      
        <content type="html"><![CDATA[<br><blockquote><h1 id="MySQL和Oracle的区别"><a href="#MySQL和Oracle的区别" class="headerlink" title="MySQL和Oracle的区别"></a>MySQL和Oracle的区别</h1></blockquote><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>) 对事务的提交</span><br><span class="line">    MySQL默认是自动提交，而<span class="keyword">Oracle默认不自动提交，需要用户手动提交，需要在写commit;指令或者点击commit按钮</span></span><br><span class="line"><span class="keyword">(2) </span>分页查询</span><br><span class="line">    MySQL是直接在SQL语句中写<span class="string">"select... from ...where...limit  x, y"</span>,有limit就可以实现分页<span class="comment">;而Oracle则是需要用到伪列ROWNUM和嵌套查询</span></span><br><span class="line">(<span class="number">3</span>) 事务隔离级别</span><br><span class="line">      MySQL是read commited的隔离级别，而<span class="keyword">Oracle是repeatable </span>read的隔离级别，同时二者都支持serializable串行化事务隔离级别，可以实现最高级别的</span><br><span class="line">    读一致性。每个session提交后其他session才能看到提交的更改。<span class="keyword">Oracle通过在undo表空间中构造多版本数据块来实现读一致性，每个session</span></span><br><span class="line"><span class="keyword"> </span>   查询时，如果对应的数据块发生变化，<span class="keyword">Oracle会在undo表空间中为这个session构造它查询时的旧的数据块</span></span><br><span class="line"><span class="keyword"> </span>   MySQL没有类似<span class="keyword">Oracle的构造多版本数据块的机制，只支持read </span>commited的隔离级别。一个session读取数据时，其他session不能更改数据，但</span><br><span class="line">    可以在表最后插入数据。session更新数据时，要加上排它锁，其他session无法访问数据</span><br><span class="line">(<span class="number">4</span>) 对事务的支持</span><br><span class="line">    MySQL在innodb存储引擎的行级锁的情况下才可支持事务，而<span class="keyword">Oracle则完全支持事务</span></span><br><span class="line"><span class="keyword">(5) </span>保存数据的持久性</span><br><span class="line">    MySQL是在数据库更新或者重启，则会丢失数据，<span class="keyword">Oracle把提交的sql操作线写入了在线联机日志文件中，保持到了磁盘上，可以随时恢复</span></span><br><span class="line"><span class="keyword">(6) </span>并发性</span><br><span class="line">    MySQL以表级锁为主，对资源锁定的粒度很大，如果一个session对一个表加锁时间过长，会让其他session无法更新此表中的数据。</span><br><span class="line">  虽然InnoDB引擎的表可以用行级锁，但这个行级锁的机制依赖于表的索引，如果表没有索引，或者sql语句没有使用索引，那么仍然使用表级锁。</span><br><span class="line">  <span class="keyword">Oracle使用行级锁，对资源锁定的粒度要小很多，只是锁定sql需要的资源，并且加锁是在数据库中的数据行上，不依赖与索引。所以Oracle对并</span></span><br><span class="line"><span class="keyword"> </span> 发性的支持要好很多。</span><br><span class="line">(<span class="number">7</span>) 逻辑备份</span><br><span class="line">    MySQL逻辑备份时要锁定数据，才能保证备份的数据是一致的，影响业务正常的dml使用,<span class="keyword">Oracle逻辑备份时不锁定数据，且备份的数据是一致</span></span><br><span class="line"><span class="keyword">(8) </span>复制</span><br><span class="line"><span class="symbol">    MySQL:</span>复制服务器配置简单，但主库出问题时，丛库有可能丢失一定的数据。且需要手工切换丛库到主库。</span><br><span class="line"><span class="symbol">    Oracle:</span>既有推或拉式的传统数据复制，也有dataguard的双机或多机容灾机制，主库出现问题是，可以自动切换备库到主库，但配置管理较复杂。</span><br><span class="line">(<span class="number">9</span>) 性能诊断</span><br><span class="line">    MySQL的诊断调优方法较少，主要有慢查询日志。</span><br><span class="line">    <span class="keyword">Oracle有各种成熟的性能诊断调优工具，能实现很多自动分析、诊断功能。比如awr、addm、sqltrace、tkproof等 </span>   </span><br><span class="line">(<span class="number">10</span>)权限与安全</span><br><span class="line">    MySQL的用户与主机有关，感觉没有什么意义，另外更容易被仿冒主机及ip有可乘之机。</span><br><span class="line">    <span class="keyword">Oracle的权限与安全概念比较传统，中规中矩。</span></span><br><span class="line"><span class="keyword">(11)分区表和分区索引</span></span><br><span class="line"><span class="keyword"> </span>   MySQL的分区表还不太成熟稳定。</span><br><span class="line">    <span class="keyword">Oracle的分区表和分区索引功能很成熟，可以提高用户访问db的体验。</span></span><br><span class="line"><span class="keyword">(12)管理工具</span></span><br><span class="line"><span class="keyword"> </span>   MySQL管理工具较少，在linux下的管理工具的安装有时要安装额外的包（phpmyadmin， etc)，有一定复杂性。</span><br><span class="line">    <span class="keyword">Oracle有多种成熟的命令行、图形界面、web管理工具，还有很多第三方的管理工具，管理极其方便高效。</span></span><br><span class="line"><span class="keyword">(13)最重要的区别</span></span><br><span class="line"><span class="keyword"> </span>   MySQL是轻量型数据库，并且免费，没有服务恢复数据。</span><br><span class="line">    <span class="keyword">Oracle是重量型数据库，收费，Oracle公司对Oracle数据库有任何服务</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css响应式布局的head中content属性</title>
      <link href="/2019/09/21/2019-9-21-thrty-seven/"/>
      <url>/2019/09/21/2019-9-21-thrty-seven/</url>
      
        <content type="html"><![CDATA[<br><p> <code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0&quot;&gt;</code></p><blockquote><p>content属性值 :</p></blockquote><pre><code>width:可视区域的宽度，值可为数字或关键词device-widthheight:同widthintial-scale:页面首次被显示是可视区域的缩放级别，取值1.0则页面按实际尺寸显示，无任何缩放maximum-scale=1.0, minimum-scale=1.0;可视区域的缩放级别，         maximum-scale用户可将页面放大的程序，1.0将禁止用户放大到实际尺寸之上。user-scalable:是否可对页面进行缩放，no 禁止缩放。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap环境部署</title>
      <link href="/2019/09/20/2019-9-20-thrty-six/"/>
      <url>/2019/09/20/2019-9-20-thrty-six/</url>
      
        <content type="html"><![CDATA[<br><p>快速部署<br>使用 Bootstrap CDN嵌入4行代码就能完成导入！</p><p>方式一:1行 CSS<br>复制下面的 样式表粘贴到网页 <head><meta name="generator" content="Hexo 3.9.0"> 里面，并放在其它CSS文件之前.</head></p><p><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot;&gt;</code></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">方式二:3行 JS</span><br><span class="line">全局组件运行在 jQuery 组件上，其中包括 Popper.js, 以及系统内置 JavaScript 插件. 建议将 <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"> 的结束放在页面的 <span class="tag">&lt;/<span class="name">body</span>&gt;</span> 之前以符合新移动WEB规范，并遵循下面代码的先后顺序。</span></span></span><br><span class="line"></span><br><span class="line">您可以引用 jQuery 精简版,兼容完整版，并无二异。</span><br><span class="line"></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://code.jquery.com/jquery-3.3.1.slim.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"</span> <span class="attr">integrity</span>=<span class="string">"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习感悟</title>
      <link href="/2019/09/19/2019-9-19-thrty-five-ganwu/"/>
      <url>/2019/09/19/2019-9-19-thrty-five-ganwu/</url>
      
        <content type="html"><![CDATA[<br><blockquote><h2 id="在兄弟会学习的感悟："><a href="#在兄弟会学习的感悟：" class="headerlink" title="在兄弟会学习的感悟："></a>在兄弟会学习的感悟：</h2><p>　<br><br>　  在兄弟会学习也一个来月了，从刚开始的对兄弟会学习模式的怀疑和迷惘到现在对未来充满希望的状态，从刚开始遇到新同学那种陌生尴尬变成现在的开车伙伴;大家也从初始的小白晋升到大白，外表充满着可爱，脑子充满着我们每天被代码ｂｕｇ折磨的酸爽．这就是为什么都大家不爱扫地呢？你说头发这种东西它像长在地板上一样;咱也不懂．．．(当然是玩笑话了)<br><br><br>　　在兄弟会中我们拥有全校最好的教室，最好的同伴，最好的学习资源，最好的就是我们可以任意选取我们兄弟连的任意学科的学习机会，让我充满对未来的期望．<br><br><br>　　在兄弟会学习的这些天我们大家经过学习的欢乐，经过项目的痛苦，但我们大家并没有放弃，越战越勇征服了一座又一座山峰，从摸索ｌｉｎｕｘ系统的门路到与它交上朋友；从初窥ｇｉｔ命令到有自己的比较ｌｏｗ的博客，心里的那份欢愉那是抵挡不了的；为什么ＱＱ是可以聊天的呢：经过对ｔｃｐ协议的些许认知了解到消息收发的过程；为什么我们上网能看到界面呢：当然是我们前端的ｈｔｍｌ，ｃｓｓ，ｊｓ，ｊｑｕｅｒｙ等等协作分工，一个负责搭房子的框架，一个负责给房子装修，一个负责给房子加家具；经过大家自学前端，开始铺起淘宝静态页面来了，想当年这是想都不敢想的事啊，我们竟然做到了，当然其中各种坑各种ｂｕｇ都抗过来了；只有经历后才能更加了解实践得真理．未来可期！！！<br><img src="./img/%E5%A5%A5%E8%BF%AA.jpg" alt="aa"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap3和Bootstrap4区别</title>
      <link href="/2019/09/19/2019-9-19-thrty-fivequbie/"/>
      <url>/2019/09/19/2019-9-19-thrty-fivequbie/</url>
      
        <content type="html"><![CDATA[<br><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">&gt;Bootstrap3:</span><br><span class="line">Less  </span><br><span class="line"><span class="number">4</span>种栅格类</span><br><span class="line">使用px为单位  </span><br><span class="line">使用<span class="built_in">push</span>和pull向左右移动</span><br><span class="line"> 使用<span class="built_in">float</span>的布局方式    </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">Bootstrap4:</span><br><span class="line">  Sass语言编写</span><br><span class="line">   <span class="number">5</span>种栅格类</span><br><span class="line">    使用<span class="built_in">rem</span>和em为单位（除部分margin和padding使用px）</span><br><span class="line">    偏移列通过offset-类设置</span><br><span class="line">    选择弹性盒模型（flexbox）</span><br><span class="line">## </span><br><span class="line">&gt; 注：Bootstrap3的<span class="number">4</span>种栅格：</span><br><span class="line"></span><br><span class="line">特小（<span class="built_in">col</span>-xs-） 适配手机(&lt;768px)</span><br><span class="line">小（<span class="built_in">col</span>-sm-） 适配平板(≥768px)</span><br><span class="line">中（<span class="built_in">col</span>-md-） 适配电脑(≥992px)</span><br><span class="line">大（<span class="built_in">col</span>-<span class="built_in">lg</span>-） 适配宽屏电脑(≥1200px)</span><br><span class="line"></span><br><span class="line">&gt;Bootstrap4的<span class="number">5</span>种栅格：</span><br><span class="line"></span><br><span class="line">特小（<span class="built_in">col</span>-）(&lt;576px)</span><br><span class="line">小（<span class="built_in">col</span>-sm-）(≥576px)</span><br><span class="line">中（<span class="built_in">col</span>-md-）(≥768px)</span><br><span class="line">大（<span class="built_in">col</span>-<span class="built_in">lg</span>-） (≥992px)</span><br><span class="line">特大（<span class="built_in">col</span>-xl-）（≥1200px）</span><br><span class="line">Bootstrap4特点</span><br><span class="line"></span><br><span class="line">&gt;新增网格层适配了移动端；</span><br><span class="line">全面引入ES6新特性（重写所有JavaScript插件）；</span><br><span class="line">css文件减少了至少<span class="number">40</span><span class="symbol">%</span>；</span><br><span class="line">所有文档都用Markdown编辑器重写；</span><br><span class="line">放弃对IE8的支持</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第33天</title>
      <link href="/2019/09/18/2019-9-18-thrty-four/"/>
      <url>/2019/09/18/2019-9-18-thrty-four/</url>
      
        <content type="html"><![CDATA[<br><blockquote><p>什么是vue.js<br></p></blockquote><p>  vue.js 是目前最火的前端框架,react是最流行的一个前端框架(react除了开发网站,还可以开发手机app,vue语法也是可以进行手机app开发的,需要借助于weex)</p><blockquote><p>vue.js 是前端的主流框架之一,和angular.js、react.js 一起,并成为前端三大主流框架!</p></blockquote><blockquote><p>vue.js 是一套构建用户界面的框架,只关注视图层,它不仅易于上手,还便于与第三方库或及既有<br>项目整合.(vue有配套的第三方类库,可以整合其起来做大型项目的开发)</p></blockquote><blockquote><p>前端的主要工作? 主要负责MVC中的V这一层;主要工作就是和界面打交道;</p></blockquote><p>为什么要学习流行框架<br>企业为了提高开发效率:在企业中,时间就是效率,效率就是金钱!<br>提高开发效率的发展历程:原声js-&gt;jquery之类的类库-&gt;前端模板引擎-&gt;angular.js/vue.js</p><blockquote><p>在vue中,一个核心的概念,就是让用户不在操作DOM元素,解放了用户的双手,让程序员可以更多的时间去关注业务逻辑;</p></blockquote><blockquote><p>框架和库的区别</p></blockquote><p>框架: 是一套完整的解决方案;对项目的侵入性较大,项目如果需要更换框架,泽需要重新架构整个项目.<br>node中的express;</p><p>库(插件):提供某一小功能,对项目的侵入性较小,如果某个库无法完成某些需求,可以很容易切换到其他库实现需求.<br>1.从jquery切换到zepto<br>2.从ejs切换到art-template</p><blockquote><p>node(后端)中的MVC与前端中的MVVM之间的区别</p></blockquote><p>MVC是后端的分层开发概念;<br>MVVM是前端视图层的概念,主要关注于视图层分离,也就是说:MVVM把前端的视图层,分为了三部分model view vm viewmodel</p>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第33天,了解vue基础</title>
      <link href="/2019/09/17/2019-9-17-thrty-three/"/>
      <url>/2019/09/17/2019-9-17-thrty-three/</url>
      
        <content type="html"><![CDATA[<br><h2 id="了解vue-js的基础语法，看了看菜鸟的vue介绍．"><a href="#了解vue-js的基础语法，看了看菜鸟的vue介绍．" class="headerlink" title="了解ｖｕｅ.ｊｓ的基础语法，看了看菜鸟的ｖｕｅ介绍．"></a>了解ｖｕｅ.ｊｓ的基础语法，看了看菜鸟的ｖｕｅ介绍．</h2> <br><h2 id="vue-js菜鸟教程"><a href="#vue-js菜鸟教程" class="headerlink" title="ｖｕｅ.ｊｓ菜鸟教程"></a><a href="https://www.runoob.com/vue2/vue-template-syntax.html" target="_blank" rel="noopener">ｖｕｅ.ｊｓ菜鸟教程</a></h2>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第29天,蛇形字，进度条，右键点击，点名器.</title>
      <link href="/2019/09/12/2019-9-12-twenty-nine/"/>
      <url>/2019/09/12/2019-9-12-twenty-nine/</url>
      
        <content type="html"><![CDATA[<br><h2 id="蛇形文字"><a href="#蛇形文字" class="headerlink" title="蛇形文字:"></a>蛇形文字:</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://libs.baidu.com/jquery/2.0.0/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">*&#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line">li&#123;</span><br><span class="line">    float: left;</span><br><span class="line">    width: 40px;</span><br><span class="line">    height: 20px;</span><br><span class="line">    color: red;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    font-size: 30px;</span><br><span class="line">    top: -100px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">ul&#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>j<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>a<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>v<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>a<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>s<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>c<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>r<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>i<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>p<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>t<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>测<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>试<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>代<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>码<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">window</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> x = e.clientX;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> y = e.clientY;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(i &gt;= $(<span class="string">'li'</span>).length<span class="number">-1</span>) &#123;</span></span><br><span class="line">            clearInterval(a);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        $(<span class="string">'li'</span>).eq(i).css(&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="string">'left'</span>:x+<span class="number">20</span>+(i*<span class="number">30</span>)+<span class="string">"px"</span>,</span></span><br><span class="line"><span class="actionscript">            <span class="string">'top'</span>:y<span class="number">-20</span>+<span class="string">"px"</span></span></span><br><span class="line">        &#125;);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;,50);</span><br><span class="line">&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="进度条"><a href="#进度条" class="headerlink" title="进度条:"></a>进度条:</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>进度条<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#out</span>&#123;<span class="attribute">width</span>:<span class="number">600px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">border</span>:<span class="number">3px</span> solid <span class="number">#888</span>;<span class="attribute">border-radius</span>:<span class="number">20px</span>;<span class="attribute">margin-top</span>:<span class="number">100px</span>;<span class="attribute">text-align</span>:right;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#in</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">width</span>:<span class="number">0%</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">background</span>:<span class="number">#34FA24</span>;<span class="attribute">border-radius</span>:<span class="number">20px</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.button1</span>&#123;<span class="attribute">background</span>:none;<span class="attribute">border</span>:none;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">background</span>:<span class="number">#4DBF7D</span>;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">border-radius</span>:<span class="number">5px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.button2</span>&#123;<span class="attribute">background</span>:none;<span class="attribute">border</span>:none;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">background</span>:<span class="number">#F79021</span>;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">border-radius</span>:<span class="number">5px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.button3</span>&#123;<span class="attribute">background</span>:none;<span class="attribute">border</span>:none;<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">height</span>:<span class="number">30px</span>;<span class="attribute">background</span>:<span class="number">#5BC0DE</span>;<span class="attribute">margin-top</span>:<span class="number">20px</span>;<span class="attribute">border-radius</span>:<span class="number">5px</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:600px;margin:100px auto"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"out"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"in"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button1"</span> <span class="attr">onclick</span>=<span class="string">"start()"</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"bun"</span> <span class="attr">class</span>=<span class="string">"button2"</span> <span class="attr">onclick</span>=<span class="string">"text(this)"</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"button3"</span>  <span class="attr">onclick</span>=<span class="string">"ttt()"</span>&gt;</span>重新下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">'in'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> bun = <span class="built_in">document</span>.getElementById(<span class="string">'bun'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> m=<span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> msg = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> masg = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(msg)&#123;</span></span><br><span class="line"><span class="actionscript">msg = <span class="literal">false</span>;</span></span><br><span class="line">test();</span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">'nizii'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(m&gt;<span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="actionscript">msg = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">alert(<span class="string">'下载已完成!'</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript">div.style.width = m+<span class="string">"%"</span>;</span></span><br><span class="line">div.innerHTML = div.style.width;</span><br><span class="line">m++;</span><br><span class="line">a = setTimeout(test,100);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">text</span><span class="params">(aaa)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(masg)&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span>(msg)&#123;<span class="keyword">return</span>;&#125;</span></span><br><span class="line"><span class="actionscript">masg = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">aaa.innerHTML = <span class="string">'恢复下载'</span>;</span></span><br><span class="line">clearTimeout(a);</span><br><span class="line"><span class="actionscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">masg = <span class="literal">true</span>;</span></span><br><span class="line">clearTimeout(a);</span><br><span class="line">test();</span><br><span class="line"><span class="actionscript">aaa.innerHTML = <span class="string">'暂停'</span>;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">ttt</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">clearTimeout(a);</span><br><span class="line"><span class="actionscript">bun.innerHTML = <span class="string">'暂停'</span>;</span></span><br><span class="line"><span class="actionscript">masg = <span class="literal">true</span>;</span></span><br><span class="line">m = 0;</span><br><span class="line">test();</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="右键点击"><a href="#右键点击" class="headerlink" title="右键点击"></a>右键点击</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义右键菜单(百度)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        font-family: "KaiTi";</span><br><span class="line">    &#125;</span><br><span class="line">    * &#123;</span><br><span class="line">        padding: 0;</span><br><span class="line">        margin: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.contextmenu</span> &#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">box-shadow</span>: 3<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 10px;</span><br><span class="line">        left: 10px;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.contextmenu</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        height: 40px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.contextmenu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">        padding: 0 30px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.contextmenu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#ccc</span>;</span></span><br><span class="line">        font-weight: bold;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contextmenu"</span> <span class="attr">id</span>=<span class="string">"context"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>粘贴<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>剪切<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.oncontextmenu = <span class="function"><span class="keyword">function</span>(<span class="params">env</span>)</span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//env 表示event事件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 兼容event事件写法</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> e = env || <span class="built_in">window</span>.event;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取菜单，让菜单显示出来</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> context = <span class="built_in">document</span>.getElementById(<span class="string">"context"</span>);</span></span><br><span class="line"><span class="actionscript">           context.style.display = <span class="string">"block"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">           <span class="comment">//  让菜单随着鼠标的移动而移动</span></span></span><br><span class="line"><span class="actionscript">           <span class="comment">//  获取鼠标的坐标</span></span></span><br><span class="line"><span class="actionscript">           <span class="keyword">var</span> x = e.clientX;</span></span><br><span class="line"><span class="actionscript">           <span class="keyword">var</span> y = e.clientY;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">           <span class="comment">//  获取窗口的宽度和高度</span></span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> w = <span class="built_in">window</span>.innerWidth;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> h = <span class="built_in">window</span>.innerHeight;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">           <span class="comment">//  调整宽度和高度</span></span></span><br><span class="line"><span class="javascript">           context.style.left = <span class="built_in">Math</span>.min(w<span class="number">-202</span>,x)+<span class="string">"px"</span>;</span></span><br><span class="line"><span class="javascript">           context.style.top = <span class="built_in">Math</span>.min(h<span class="number">-230</span>,y)+<span class="string">"px"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">          <span class="comment">// return false可以关闭系统默认菜单</span></span></span><br><span class="line"><span class="actionscript">           <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">       <span class="comment">//   当鼠标点击后关闭右键菜单</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> contextmenu = <span class="built_in">document</span>.getElementById(<span class="string">"context"</span>);</span></span><br><span class="line"><span class="actionscript">          contextmenu.style.display = <span class="string">"none"</span>;</span></span><br><span class="line"></span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="点名器"><a href="#点名器" class="headerlink" title="点名器"></a>点名器</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>福利。<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            list-style-type: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        a,</span><br><span class="line">        img &#123;</span><br><span class="line">            border: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        body &#123;</span><br><span class="line">            font: 12px/180% "Microsoft YaHei", "微软雅黑", "宋体";</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#bodybj</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">url</span>(<span class="selector-tag">images</span><span class="selector-class">.jpg</span>) <span class="selector-tag">no-repeat</span> <span class="selector-tag">center</span> <span class="selector-tag">top</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">            margin: auto;</span><br><span class="line">            width: 660px;</span><br><span class="line">            font-size: 66px;</span><br><span class="line">            height: 350px;</span><br><span class="line">            line-height: 94px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#138eee</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            padding: 0 30px;</span><br><span class="line">            margin-top: 50px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#60FF60</span></span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#bt</span> &#123;</span></span><br><span class="line">            margin: auto;</span><br><span class="line">            width: 200px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin-top: 75px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#4AB048</span>;</span></span><br><span class="line">            font-size: 25px;</span><br><span class="line">            line-height: 28px;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> namelist = [</span></span><br><span class="line"><span class="actionscript">            <span class="string">"前台"</span>, <span class="string">"前台"</span>, <span class="string">"六个核桃"</span>, <span class="string">"六个核桃"</span>, <span class="string">"六个核桃"</span>, <span class="string">"六个核桃"</span>, <span class="string">"六个核桃"</span>, <span class="string">"六个核桃"</span>, <span class="string">"加藤鹰"</span>, <span class="string">"前台"</span>, <span class="string">"前台"</span>, <span class="string">"前台"</span>, <span class="string">"前台"</span>, <span class="string">"前台"</span>, <span class="string">"六个核桃"</span>, <span class="string">"傻航"</span>, <span class="string">"傻航"</span>, <span class="string">"傻航"</span>, <span class="string">"傻航"</span>, <span class="string">"傻航"</span>, <span class="string">"傻航"</span></span></span><br><span class="line">        ];</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> mytime = <span class="literal">null</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">doit</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> bt = <span class="built_in">window</span>.document.getElementById(<span class="string">"bt"</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (mytime == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                bt.innerHTML = <span class="string">"停止寻觅"</span>;</span></span><br><span class="line">                show();</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                bt.innerHTML = <span class="string">"开始寻觅"</span>;</span></span><br><span class="line">                clearTimeout(mytime);</span><br><span class="line"><span class="actionscript">                mytime = <span class="literal">null</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> box = <span class="built_in">window</span>.document.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> num = <span class="built_in">Math</span>.floor((<span class="built_in">Math</span>.random() * <span class="number">100000</span>)) % namelist.length;</span></span><br><span class="line">            box.innerHTML = namelist[num];</span><br><span class="line"><span class="actionscript">            mytime = setTimeout(<span class="string">"show()"</span>, <span class="number">1</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">"bodybj"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>今晚谁会陪你睡？？<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bt"</span> <span class="attr">onClick</span>=<span class="string">"doit()"</span>&gt;</span>开始寻觅<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;margin:50px 0; font:normal 14px/24px 'MicroSoft YaHei';"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第28天，倒计时，倒计时抢购,跑马灯,时间钟</title>
      <link href="/2019/09/11/2019-9-11-twenty-eight/"/>
      <url>/2019/09/11/2019-9-11-twenty-eight/</url>
      
        <content type="html"><![CDATA[<br><h2 id="倒计时："><a href="#倒计时：" class="headerlink" title="倒计时："></a>倒计时：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">倒计时:</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>01<span class="tag">&lt;/<span class="name">span</span>&gt;</span>小时</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>分钟</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>02<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    setInterval(fun,1000);</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> list = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"span"</span>);</span></span><br><span class="line">        list[2].innerHTML--;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(list[<span class="number">2</span>].innerHTML&lt;<span class="number">10</span>) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> ll = list[<span class="number">2</span>].innerHTML--;</span></span><br><span class="line"><span class="actionscript">            list[<span class="number">2</span>].innerHTML = <span class="string">"0"</span>+ll;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(ll&lt;<span class="number">0</span>)&#123;</span></span><br><span class="line">            list[2].innerHTML=59;</span><br><span class="line">            list[1].innerHTML--;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (list[<span class="number">1</span>].innerHTML&lt;<span class="number">0</span>)&#123;</span></span><br><span class="line">            list[1].innerHTML=59;</span><br><span class="line">            list[0].innerHTML--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="倒计时抢购："><a href="#倒计时抢购：" class="headerlink" title="倒计时抢购："></a>倒计时抢购：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    表单默认值:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"表单默认值---"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"h1"</span>&gt;</span>距离下次团购还有<span class="tag">&lt;<span class="name">span</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>小时<span class="tag">&lt;<span class="name">span</span>&gt;</span>00<span class="tag">&lt;/<span class="name">span</span>&gt;</span>分钟<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"s1"</span>&gt;</span>05<span class="tag">&lt;/<span class="name">span</span>&gt;</span>秒<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> s1=<span class="built_in">document</span>.getElementById(<span class="string">"s1"</span>).innerHTML;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> set1=setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">              s1--;</span><br><span class="line"><span class="javascript">              <span class="built_in">document</span>.getElementById(<span class="string">'s1'</span>).innerHTML=<span class="string">'0'</span>+s1;</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">if</span>(s1==<span class="number">0</span>)&#123;</span></span><br><span class="line">                  clearInterval(set1);</span><br><span class="line"><span class="handlebars"><span class="xml">                  h1.innerHTML="<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'https://1978413822.github.io/'</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击去抢<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>";</span></span></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;,1000)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="跑马灯："><a href="#跑马灯：" class="headerlink" title="跑马灯："></a>跑马灯：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"msg"</span>&gt;</span>上课不听讲，一半只有三种情况：1.手里有个手机 2.心里有个美女 3.身边做个逗比mg<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> mes = <span class="built_in">document</span>.getElementById(<span class="string">"msg"</span>);</span></span><br><span class="line">    setInterval(run, 300);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> str = mes.innerHTML;</span></span><br><span class="line">        mes.innerHTML = str.substr(1) + str.charAt(1);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="时间钟："><a href="#时间钟：" class="headerlink" title="时间钟："></a>时间钟：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#iWatch</span> &#123;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 60px;</span><br><span class="line">            font-size: 40px;</span><br><span class="line">            font-weight: bold;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#abcdef</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"iWatch"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//实例化 Date</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//获取时分秒</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> h = date.getHours();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> i = date.getMinutes();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> s = date.getSeconds();</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//处理</span></span></span><br><span class="line"><span class="actionscript">            h = (h &lt; <span class="number">10</span>) ? <span class="string">'0'</span> + h : h;</span></span><br><span class="line"><span class="actionscript">            i = (i &lt; <span class="number">10</span>) ? <span class="string">'0'</span> + i : i;</span></span><br><span class="line"><span class="actionscript">            s = (s &lt; <span class="number">10</span>) ? <span class="string">'0'</span> + s : s;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//写入表</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">'iWatch'</span>).innerHTML = h + <span class="string">':'</span> + i + <span class="string">':'</span> + s;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        setInterval(run, 1000);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        run();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="全选："><a href="#全选：" class="headerlink" title="全选："></a>全选：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>全选框<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>哈哈<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">onclick</span>=<span class="string">"pp();"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span><span class="attr">id</span>=<span class="string">"ok"</span>&gt;</span>全选</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>  <span class="attr">onclick</span>=<span class="string">"kk();"</span>&gt;</span>全不选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">button</span>  <span class="attr">onclick</span>=<span class="string">"gg();"</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> input=<span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">pp</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>( <span class="keyword">var</span> i=<span class="number">0</span>;i&lt;input.length;i++)&#123;</span></span><br><span class="line"><span class="actionscript">        input[i].checked=<span class="literal">true</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">kk</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;input.length;i++)&#123;</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">        input[i].checked=<span class="literal">false</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">gg</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;input.length;i++)&#123;</span></span><br><span class="line">        input[i].checked=!input[i].checked;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单默认："><a href="#表单默认：" class="headerlink" title="表单默认："></a>表单默认：</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>表单默认值<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>表单事件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span> 搜索：</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">'search'</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"请输入搜索内容"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> input = <span class="built_in">document</span>.getElementById(<span class="string">'search'</span>);</span></span><br><span class="line"><span class="actionscript">        input.onfocus = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//alert('啊，我获取焦点了');</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.value = <span class="string">""</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.style.color = <span class="string">"#000"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第26天，字符跳动，弹出层效果</title>
      <link href="/2019/09/09/2019-9-09-twenty-six/"/>
      <url>/2019/09/09/2019-9-09-twenty-six/</url>
      
        <content type="html"><![CDATA[<h3 id="字符跳动"><a href="#字符跳动" class="headerlink" title="字符跳动:"></a>字符跳动:</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">id</span>=<span class="string">"show"</span> <span class="attr">size</span>=<span class="string">'6'</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> mes = <span class="string">'1234567890'</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (i &gt;= mes.length) i = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.getElementById(<span class="string">"show"</span>).innerHTML = show(i, mes);</span></span><br><span class="line">        i++;</span><br><span class="line">    &#125;, 100);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">(i, mes)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//substr(start,length) 方法可在字符串中抽取从 start 下标开始的指定数目的字符。</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> tt = mes.substr(<span class="number">0</span>, i);</span></span><br><span class="line"><span class="handlebars"><span class="xml">        tt += '<span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">7</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>' + mes[i] + '<span class="tag">&lt;/<span class="name">font</span>&gt;</span>'</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//表示从i+1位置到末尾</span></span></span><br><span class="line">        tt += mes.substr(i + 1);</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> tt;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="弹出层效果（自己的，下方还有完整版）："><a href="#弹出层效果（自己的，下方还有完整版）：" class="headerlink" title="弹出层效果（自己的，下方还有完整版）："></a>弹出层效果（自己的，下方还有完整版）：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>弹出层<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#model</span> &#123;</span></span><br><span class="line">        width: 400px;</span><br><span class="line">        height: 400px;</span><br><span class="line">        background-color: blue;</span><br><span class="line"><span class="css">        <span class="comment">/* fixed固定定位 */</span></span></span><br><span class="line">        position: fixed;</span><br><span class="line">        top: 50%;</span><br><span class="line">        left: 50%;</span><br><span class="line">        margin-left: -220px;</span><br><span class="line">        margin-top: -170px;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        padding: 20px;</span><br><span class="line"><span class="css">        <span class="comment">/* 让界面位于最上方 */</span></span></span><br><span class="line">        z-index: 10001;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="selector-id">#model</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 鼠标变手 */</span></span></span><br><span class="line">        cursor: pointer;</span><br><span class="line">        font-size: 30px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 10px;</span><br><span class="line">        top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"login()"</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"model"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>登陆框<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">onclick</span>=<span class="string">"lose()"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//显示出隐藏页面</span></span></span><br><span class="line"><span class="actionscript">            model.style.display = <span class="string">'block'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">lose</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//把页面隐藏</span></span></span><br><span class="line"><span class="actionscript">            model.style.display = <span class="string">'none'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="弹出框（所给版本）："><a href="#弹出框（所给版本）：" class="headerlink" title="弹出框（所给版本）："></a>弹出框（所给版本）：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>弹出层<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line">            height: 3000px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#modal</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 300px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#369</span>;</span></span><br><span class="line">            position: fixed;</span><br><span class="line">            top: 50%;</span><br><span class="line">            left: 50%;</span><br><span class="line">            margin-left: -220px;</span><br><span class="line">            margin-top: -170px;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">            padding: 20px;</span><br><span class="line">            z-index: 10001;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#modal</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line">            cursor: pointer;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            right: 10px;</span><br><span class="line">            top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#opcity</span> &#123;</span></span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 100%;</span><br><span class="line">            left: 0px;</span><br><span class="line">            top: 0px;</span><br><span class="line">            position: fixed;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.6</span>);</span></span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>弹出层效果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"login()"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"modal"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录框<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">onclick</span>=<span class="string">"closeBox()"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"opcity"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            modal.style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="actionscript">            opcity.style.display = <span class="string">"block"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">closeBox</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//alert('ok');</span></span></span><br><span class="line"><span class="actionscript">            modal.style.display = <span class="string">"none"</span>;</span></span><br><span class="line"><span class="actionscript">            opcity.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        opcity.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            modal.style.display = <span class="string">"none"</span>;</span></span><br><span class="line"><span class="actionscript">            opcity.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第26天，地址联动，div转圈</title>
      <link href="/2019/09/08/2019-9-08-twenty-five/"/>
      <url>/2019/09/08/2019-9-08-twenty-five/</url>
      
        <content type="html"><![CDATA[<br><h4 id="地址联动选择："><a href="#地址联动选择：" class="headerlink" title="地址联动选择："></a>地址联动选择：</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>表单事件--onchange 地址联动效果<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span> 请选择您的地址：</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"pro"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"city"</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//声明数组， 省的信息</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> proList = [<span class="string">'江苏'</span>, <span class="string">'浙江'</span>, <span class="string">'安徽'</span>, <span class="string">'江西'</span>, <span class="string">'福建'</span>];</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//城市的信息</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> cityList = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="actionscript">        cityList[<span class="number">0</span>] = [<span class="string">'南京'</span>, <span class="string">'苏州'</span>, <span class="string">'常州'</span>, <span class="string">'扬州'</span>, <span class="string">'徐州'</span>];</span></span><br><span class="line"><span class="actionscript">        cityList[<span class="number">1</span>] = [<span class="string">'杭州'</span>, <span class="string">'嘉兴'</span>, <span class="string">'绍兴'</span>, <span class="string">'衢州'</span>, <span class="string">'宁波'</span>];</span></span><br><span class="line"><span class="actionscript">        cityList[<span class="number">2</span>] = [<span class="string">'合肥'</span>, <span class="string">'安庆'</span>, <span class="string">'马鞍山'</span>, <span class="string">'黄山'</span>, <span class="string">'芜湖'</span>];</span></span><br><span class="line"><span class="actionscript">        cityList[<span class="number">3</span>] = [<span class="string">'南昌'</span>, <span class="string">'赣州'</span>, <span class="string">'九江'</span>, <span class="string">'景德镇'</span>, <span class="string">'上饶'</span>];</span></span><br><span class="line"><span class="actionscript">        cityList[<span class="number">4</span>] = [<span class="string">'福州'</span>, <span class="string">'泉州'</span>, <span class="string">'漳州'</span>, <span class="string">'厦门'</span>, <span class="string">'晋江'</span>];</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//获取select</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pro = <span class="built_in">document</span>.getElementById(<span class="string">'pro'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> city = <span class="built_in">document</span>.getElementById(<span class="string">'city'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//第一个 select 框 中输出 省的信息</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; proList.length; i++) &#123;</span></span><br><span class="line"><span class="vbscript">            pro.add(<span class="keyword">new</span> <span class="keyword">Option</span>(proList[i], i));</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">//绑定 change事件</span></span></span><br><span class="line"><span class="actionscript">        pro.onchange = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//情况以前的选型</span></span></span><br><span class="line">                city.options.length = 0;</span><br><span class="line"><span class="actionscript">                <span class="comment">//获取 选择的option</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> index = pro.value;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//根据索引值取出 对应的城市 信息</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> citys = cityList[index];</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//遍历</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; citys.length; i++) &#123;</span></span><br><span class="line"><span class="vbscript">                    city.add(<span class="keyword">new</span> <span class="keyword">Option</span>(citys[i], i));</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//手工出发 change事件</span></span></span><br><span class="line">        pro.onchange();</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h4 id="div转圈圈："><a href="#div转圈圈：" class="headerlink" title="div转圈圈："></a>div转圈圈：</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>正方形<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">            width: 400px;</span><br><span class="line">            height: 400px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line">            margin: 100px auto;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#point</span> &#123;</span></span><br><span class="line">            width: 10px;</span><br><span class="line">            height: 10px;</span><br><span class="line">            background: red;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"point"</span> <span class="attr">style</span>=<span class="string">"top:0;left:0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    setInterval(run, 1);</span><br><span class="line"><span class="actionscript">    <span class="comment">//run()</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> x = <span class="number">0</span>; <span class="comment">//top</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> y = <span class="number">0</span>; <span class="comment">//left</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (x &lt; <span class="number">390</span> &amp;&amp; y == <span class="number">0</span>) &#123;</span></span><br><span class="line">            down()</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (x == <span class="number">390</span> &amp;&amp; y &lt; <span class="number">390</span>) &#123;</span></span><br><span class="line"><span class="vbscript">            <span class="built_in">right</span>()</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (y == <span class="number">390</span> &amp;&amp; x &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line">            up()</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (x == <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="vbscript">            <span class="built_in">left</span>()</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">down</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        point.style.top = x + <span class="string">'px'</span>;</span></span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">right</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        point.style.left = y + <span class="string">'px'</span>;</span></span><br><span class="line">        y++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">up</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        point.style.top = x + <span class="string">'px'</span>;</span></span><br><span class="line">        x--;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">left</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        point.style.left = y + <span class="string">'px'</span>;</span></span><br><span class="line">        y--;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第25天，安了deepin系统，选项卡，div转动，闭包</title>
      <link href="/2019/09/07/2019-9-07-twenty-four/"/>
      <url>/2019/09/07/2019-9-07-twenty-four/</url>
      
        <content type="html"><![CDATA[<br><h4 id="日报：练习选项卡，div转动，闭包，感觉有些了解但又不是很理解的感觉，还是缺乏练习。"><a href="#日报：练习选项卡，div转动，闭包，感觉有些了解但又不是很理解的感觉，还是缺乏练习。" class="headerlink" title="日报：练习选项卡，div转动，闭包，感觉有些了解但又不是很理解的感觉，还是缺乏练习。"></a>日报：练习选项卡，div转动，闭包，感觉有些了解但又不是很理解的感觉，还是缺乏练习。</h4>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第23天，后三天铺淘宝主页，附录个放大镜代码</title>
      <link href="/2019/09/05/2019-9-05-twenty-three/"/>
      <url>/2019/09/05/2019-9-05-twenty-three/</url>
      
        <content type="html"><![CDATA[<br><h4 id="后三天任务："><a href="#后三天任务：" class="headerlink" title="后三天任务："></a>后三天任务：</h4><ul><li>淘宝首页、列表页、详情页、购物车页、订单页、登录页、注册页</li><li>要求一个页面里有两个js特效（轮播，表单验证、选项卡、导航栏等）</li><li>所有js、css外联</li><li>注释<br>全部要提取<br>不能用定位，全用浮动<br>外边距、内边距<br>混合布局<br>用html5和css3写<h4 id="放大镜的代码："><a href="#放大镜的代码：" class="headerlink" title="放大镜的代码："></a>放大镜的代码：</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>放大镜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0px;</span><br><span class="line">            padding: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.img</span> &#123;</span></span><br><span class="line">            width: 350px;</span><br><span class="line">            height: 350px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            margin: 100px;</span><br><span class="line">            position: relative;</span><br><span class="line">            cursor: move;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.bimg</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            top: -350px;</span><br><span class="line">            left: 350px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line">            width: 350px;</span><br><span class="line">            height: 350px;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-id">#move</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(8, 152, 202, 0<span class="selector-class">.2</span>);</span></span><br><span class="line">            top: 0px;</span><br><span class="line">            left: 0px;</span><br><span class="line">            display: none;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.simg</span> &#123;</span></span><br><span class="line">            width: 350px;</span><br><span class="line">            height: 350px;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="css">        <span class="selector-class">.bimg</span>&gt;<span class="selector-tag">img</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0px;</span><br><span class="line">            top: 0px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"simg"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--小图片--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/home/yueyang/图片/lun2.png"</span> <span class="attr">style</span>=<span class="string">"width:350px;height: 350px;"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"move"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--放大区域--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bimg"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--大图片--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/home/yueyang/图片/lun1.jpg"</span> <span class="attr">style</span>=<span class="string">"width:1400px;height: 1400px;"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">//鼠标移动到图片显示，移除隐藏     </span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".img"</span>).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".bimg"</span>).css(<span class="string">"display"</span>, <span class="string">"block"</span>);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#move"</span>).css(<span class="string">"display"</span>, <span class="string">"block"</span>);</span></span><br><span class="line"><span class="actionscript">            &#125;, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">".bimg"</span>).css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"#move"</span>).css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">            <span class="comment">//放大区域移动，大图片移动</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".img"</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> x = event.pageX;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> y = event.pageY;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> nx = x - $(<span class="string">".img"</span>).offset().left - $(<span class="string">"#move"</span>).width() / <span class="number">2</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ny = y - $(<span class="string">".img"</span>).offset().top - $(<span class="string">"#move"</span>).height() / <span class="number">2</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (nx &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line">                    nx = 0;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (nx &gt; $(<span class="string">".img"</span>).width() - $(<span class="string">"#move"</span>).width()) &#123;</span></span><br><span class="line"><span class="javascript">                    nx = $(<span class="string">".img"</span>).width() - $(<span class="string">"#move"</span>).width();</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (ny &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line">                    ny = 0;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (ny &gt; $(<span class="string">".img"</span>).height() - $(<span class="string">"#move"</span>).height()) &#123;</span></span><br><span class="line"><span class="javascript">                    ny = $(<span class="string">".img"</span>).height() - $(<span class="string">"#move"</span>).height();</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                $(<span class="string">"#move"</span>).css(&#123;</span></span><br><span class="line"><span class="vbscript">                    <span class="built_in">left</span>: nx + <span class="string">"px"</span>,</span></span><br><span class="line"><span class="actionscript">                    top: ny + <span class="string">"px"</span></span></span><br><span class="line">                &#125;);</span><br><span class="line"><span class="javascript">                $(<span class="string">".bimg&gt;img"</span>).css(&#123;</span></span><br><span class="line"><span class="javascript">                    left: -nx * $(<span class="string">".bimg"</span>).width() / $(<span class="string">"#move"</span>).width() + <span class="string">"px"</span>,</span></span><br><span class="line"><span class="javascript">                    top: -ny * $(<span class="string">".bimg"</span>).height() / $(<span class="string">"#move"</span>).height() + <span class="string">"px"</span></span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第22天，突击测试</title>
      <link href="/2019/09/04/2019-9-04-twenty-two/"/>
      <url>/2019/09/04/2019-9-04-twenty-two/</url>
      
        <content type="html"><![CDATA[<br><h4 id="准备的不充分，缺乏合作精神，做事拖拉，导致目标没完成，一定注意分工协作重要。"><a href="#准备的不充分，缺乏合作精神，做事拖拉，导致目标没完成，一定注意分工协作重要。" class="headerlink" title="准备的不充分，缺乏合作精神，做事拖拉，导致目标没完成，一定注意分工协作重要。"></a>准备的不充分，缺乏合作精神，做事拖拉，导致目标没完成，一定注意分工协作重要。</h4>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git,vim,linux操作篇</title>
      <link href="/2019/09/03/2019-9-03-all%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/09/03/2019-9-03-all%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<br><h4 id="准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。"><a href="#准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。" class="headerlink" title="准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。"></a>准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。</h4><h1 id="git篇"><a href="#git篇" class="headerlink" title="git篇"></a>git篇</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">git clone</span><br><span class="line"></span><br><span class="line">git init        创建一个空的Git仓库或者初始化一个已存在的仓库</span><br><span class="line"></span><br><span class="line">git add         添加文件内容至索引</span><br><span class="line"></span><br><span class="line">git mv          移动或重命名一个文件 目录或符号链接</span><br><span class="line"></span><br><span class="line">git <span class="keyword">reset</span>       重置当前 <span class="keyword">HEAD</span> 到指定状态</span><br><span class="line"></span><br><span class="line">git rm          从工作区和索引中删除文件</span><br><span class="line"></span><br><span class="line">git <span class="keyword">status</span>      显示工作区状态</span><br><span class="line"></span><br><span class="line">git branch -d XXX 删除</span><br><span class="line"></span><br><span class="line">git branch -vv 查看已设置的跟踪分支</span><br><span class="line"></span><br><span class="line">git branch -v  查看每个分支最后一次提交</span><br><span class="line"></span><br><span class="line">git branch <span class="comment">--merged 查看与所在分支合并了的分支</span></span><br><span class="line"></span><br><span class="line">git branch <span class="comment">--no-merged</span></span><br><span class="line"></span><br><span class="line">git checkout xxx   切换到xxx分支当下</span><br><span class="line"></span><br><span class="line">git checkout -b xxx 创建xxx分支</span><br><span class="line"></span><br><span class="line">git diff XXX</span><br><span class="line"></span><br><span class="line">git <span class="keyword">merge</span> experiment 分支执行合并</span><br><span class="line"></span><br><span class="line">git checkout <span class="keyword">master</span>  </span><br><span class="line">git <span class="keyword">merge</span> experiment   </span><br><span class="line"> 将experiment分支,与<span class="keyword">master</span>合并</span><br><span class="line"></span><br><span class="line">git rebase XXX 重新绑定XXX分支</span><br><span class="line"></span><br><span class="line">git <span class="keyword">fetch</span> <span class="comment">--all</span></span><br><span class="line">git branch -vv  从另一个仓库下载对象和引用</span><br><span class="line"></span><br><span class="line">git pull [远程储存库] [想要弄来的分支]  </span><br><span class="line">获取并整合另外的仓库或一个本地分支 </span><br><span class="line"></span><br><span class="line">git push origin <span class="comment">--delete XXX 想要从服务器删除XXX分支</span></span><br><span class="line"></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><h1 id="vim篇"><a href="#vim篇" class="headerlink" title="vim篇:"></a>vim篇:</h1><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line"><span class="built_in">n</span>&lt;space&gt;    移动光标所在位置的后<span class="number">20</span>个字符距离</span><br><span class="line"></span><br><span class="line">G  移动到这个档案的最后一行</span><br><span class="line"></span><br><span class="line">nG 移动到第 <span class="built_in">n</span> 行</span><br><span class="line"></span><br><span class="line">gg 移动到这个档案的第一行</span><br><span class="line"></span><br><span class="line"><span class="built_in">n</span>&lt;Enter&gt; 光标向下移动<span class="built_in">n</span>行</span><br><span class="line"></span><br><span class="line">/word 沿光标向下搜索</span><br><span class="line"></span><br><span class="line"><span class="built_in">n</span> 重复前一个搜索动作</span><br><span class="line"></span><br><span class="line">$s/word1/word2/g 第一行到最后一行寻找 word1 </span><br><span class="line">字符串,并替换成Word2</span><br><span class="line"></span><br><span class="line">$s/word1/word2/gc 单个替换</span><br><span class="line"></span><br><span class="line">dd 删除光标所在行</span><br><span class="line"></span><br><span class="line">ndd 删除光标向下<span class="built_in">n</span>行</span><br><span class="line"></span><br><span class="line">yy 复制光标所有行</span><br><span class="line"></span><br><span class="line">nyy 何止光标所在向下<span class="built_in">n</span>行</span><br><span class="line"></span><br><span class="line">p,P 粘贴下 粘贴上</span><br><span class="line"></span><br><span class="line">u 复原前一个动作</span><br><span class="line"></span><br><span class="line">Ctrl + r 重做上一个动作</span><br><span class="line"></span><br><span class="line">. 重复前一个动作的意思</span><br></pre></td></tr></table></figure><h1 id="Linux操作命令："><a href="#Linux操作命令：" class="headerlink" title="Linux操作命令："></a>Linux操作命令：</h1><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">find ./ -name <span class="string">"*XXX*"</span></span><br><span class="line"></span><br><span class="line">sudo find ./ -name <span class="string">"*name*"</span></span><br><span class="line"></span><br><span class="line">find ./ -name <span class="string">"[A-Z]*"</span></span><br><span class="line"></span><br><span class="line">pwd</span><br><span class="line"></span><br><span class="line">cd</span><br><span class="line"></span><br><span class="line">ls</span><br><span class="line"></span><br><span class="line">cat 合并文件、显示内容</span><br><span class="line"></span><br><span class="line">grep 查找字符串</span><br><span class="line"></span><br><span class="line">touch 创建一个空白文件</span><br><span class="line"></span><br><span class="line">cp 拷贝    cp 源文件 目标文件</span><br><span class="line"></span><br><span class="line">mv 移动文件</span><br><span class="line"></span><br><span class="line">rm 删除文件</span><br><span class="line"></span><br><span class="line">rmdir 删除文件夹</span><br><span class="line"></span><br><span class="line">mount 挂载文件系统</span><br><span class="line"></span><br><span class="line">umount 卸载已挂载上的文件系统</span><br><span class="line"></span><br><span class="line">df 检查硬盘分区和已挂上的文件系统的磁盘空间</span><br><span class="line"></span><br><span class="line">du 显示文件目录和大小</span><br><span class="line"></span><br><span class="line">fsck 检查和修复</span><br><span class="line"></span><br><span class="line">压缩</span><br><span class="line"></span><br><span class="line">tar -zcvf xxx<span class="selector-class">.tar</span><span class="selector-class">.gz</span> </span><br><span class="line"></span><br><span class="line">tar -jcvf xxx<span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br><span class="line"></span><br><span class="line">zip zzz.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">解压</span><br><span class="line"></span><br><span class="line">tar -xvf xxx<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"></span><br><span class="line">tar -jxvf xxx<span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br><span class="line"></span><br><span class="line">unzip zzz.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shutdown</span><br><span class="line"></span><br><span class="line">reboot</span><br><span class="line"></span><br><span class="line">ps  查看目前程序执行情况</span><br><span class="line"></span><br><span class="line"><span class="attribute">top</span> 查看目前程序执行情况和内存使用情况</span><br><span class="line"></span><br><span class="line">kill 终止进程</span><br><span class="line"></span><br><span class="line">date 查看日期</span><br><span class="line"></span><br><span class="line">cal 显示日历</span><br><span class="line"></span><br><span class="line">chmod 改变权限</span><br><span class="line"></span><br><span class="line">su    修改用户</span><br><span class="line"></span><br><span class="line">useradd 添加用户</span><br><span class="line"></span><br><span class="line">man 查询,解释一个命令</span><br><span class="line"></span><br><span class="line">locate 定位文件和目录</span><br><span class="line"></span><br><span class="line">whatis 寻找命令的含义</span><br><span class="line"></span><br><span class="line">head   查看文件头部</span><br><span class="line"></span><br><span class="line">tail   查看文件尾部</span><br><span class="line"></span><br><span class="line">less , more 分页工具</span><br><span class="line"></span><br><span class="line">ftp    传输文件</span><br><span class="line"></span><br><span class="line">bye    结束连线并结束程序</span><br><span class="line"></span><br><span class="line">ping   检测主机</span><br><span class="line"></span><br><span class="line">telnet 远程登录</span><br><span class="line"></span><br><span class="line">rlogin 远程登入</span><br><span class="line"></span><br><span class="line">netstat 查看网络情况</span><br><span class="line"></span><br><span class="line">which  从path环境变量寻找,显示路径名称</span><br><span class="line"></span><br><span class="line">whereis 找出可执行文件,源代码文件</span><br><span class="line"></span><br><span class="line">locate 带记忆的文件搜索</span><br><span class="line"></span><br><span class="line">updatedb 更新数据库</span><br><span class="line"></span><br><span class="line">echo 打印</span><br><span class="line"></span><br><span class="line"><span class="attribute">clear</span> 清除</span><br><span class="line"></span><br><span class="line">passwd 密码</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下安装ｊｄｋ</title>
      <link href="/2019/09/03/2019-9-03-jdkinstall/"/>
      <url>/2019/09/03/2019-9-03-jdkinstall/</url>
      
        <content type="html"><![CDATA[<br><p>linux下安装jdk<br>官网下载对应的.gz包 点击<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">下载</a></p><ul><li><p>创建一个目录用于存放解压后的文件，并解压缩到该目录下</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">sudo mkdir  /opt/java8</span><br><span class="line">sudo tar -zxvf jdk-<span class="number">8</span>u221-linux-x64<span class="selector-class">.tar</span><span class="selector-class">.gz</span> -C  /opt/java8</span><br></pre></td></tr></table></figure></li><li><p>修改环境变量<br><code>sudo vim ~/.bashrc</code></p><ul><li><p>进入文件，末尾追加如下内容：<br><code>export JAVA_HOME=/opt/java8/jdk1.8.0_221</code>     //这里要注意目录要换成自己- 解压的jdk目录</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">    <span class="builtin-name">export</span> <span class="attribute">JRE_HOME</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:$PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- 使环境变量生效</span><br><span class="line">` source ~/.bashrc`</span><br><span class="line">- 设置系统默认jdk</span><br></pre></td></tr></table></figure></li></ul><p>sudo update-alternatives –install /usr/bin/java java /opt/java8/jdk1.8.0_221/bin/java 300<br>sudo update-alternatives –install /usr/bin/javac javac /opt/java8/jdk1.8.0_221/bin/javac 300<br>sudo update-alternatives –install /usr/bin/jar jar /opt/java8/jdk1.8.0_221/bin/jar 300<br>sudo update-alternatives –install /usr/bin/javah javah /opt/java8/jdk1.8.0_221/bin/javah 300<br>sudo update-alternatives –install /usr/bin/javap javap /opt/java8/jdk1.8.0_221/bin/javap 300<br>```</p><ul><li>然后执行：<br><code>sudo update-alternatives --config java</code></li></ul></li><li><p>测试是否安装成功<br><code>java -version</code><br>突发情况</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第21天,jquery事件，选择器，滑动，淡入淡出</title>
      <link href="/2019/09/03/2019-9-03-twenty/"/>
      <url>/2019/09/03/2019-9-03-twenty/</url>
      
        <content type="html"><![CDATA[<br><h4 id="准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。"><a href="#准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。" class="headerlink" title="准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。"></a>准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。</h4><ul><li>jquery<br>特点 所有jQuery函数位于一个document ready函数中。<ul><li>$(document).ready(function(){<br>// 开始写 jQuery 代码…<br>});<br>或</li><li>$(function(){<br>// 开始写 jQuery 代码…<br>});<br>选择器</li></ul></li></ul><ol><li><p>元素选择器</p><p>基于元素名选取元素。<br>如：在页面中选取所有 </p><p> 元素:<br>$(“p”)</p></li><li><p>id选择器</p><p>通过HTML元素的id属性选取指定的元素。<br>$(document).ready(function(){<br> $(“#test”).hide();<br>});</p></li><li><p>class选择器</p><p>可以通过指定的 class 查找元素。<br>$(document).ready(function(){<br> $(“.test”).hide();<br>});</p></li></ol><ul><li>jquery事件</li></ul><ol><li><p>click()</p><p>当按钮点击事件被触发时会调用一个函数。<br>$(“p”).click(function(){<br> $(this).hide();<br>});</p></li><li><p>dblclick()</p><p>当双击元素时，会发生dblclick事件。<br>$(“p”).dblclick(function(){<br> $(this).hide();<br>});</p></li><li><p>mouseenter()</p><p>当鼠标指针穿过元素时，会发生mouseenter事件。<br>$(“#p1”).mouseenter(function(){<br> alert(‘您的鼠标移到了 id=”p1” 的元素上!’);<br>});</p></li><li><p>mouseleave()</p><p>当鼠标指针离开元素时，会发生mouseleave事件。<br>$(“#p1”).mouseleave(function(){<br> alert(“再见，您的鼠标离开了该段落。”);<br>});</p></li><li><p>mousedown()</p><p>当鼠标指针移动到元素上方，并按下鼠标按键时，会发生mousedown事件。<br>$(“#p1”).mousedown(function(){<br> alert(“鼠标在该段落上按下！”);<br>});</p></li><li><p>mouseup()</p><p>当在元素上松开鼠标按钮时，会发生mouseup事件。<br>$(“#p1”).mouseup(function(){<br> alert(“鼠标在段落上松开。”);<br>});</p></li><li><p>hover()</p><p>用于模拟光标悬停事件。<br>当鼠标移动到元素上时，会触发指定的第一个函数(mouseenter);当鼠标移出这个元素时，会触发指定的第二个函数(mouseleave)。<br>$(“#p1”).hover(<br> function(){</p><pre><code>alert(&quot;你进入了p1!&quot;);</code></pre><p> },<br> function(){</p><pre><code>alert(&quot;拜拜!现在你离开了p1!&quot;);</code></pre><p> }<br>);</p></li></ol><ul><li><p>jquery的隐藏和显示<br>$(selector).hide(speed,callback);<br>$(selector).show(speed,callback);<br>可选的 speed 参数规定隐藏/显示的速度，可以取以下值：”slow”、”fast”、”linear”或毫秒。<br>可选的callback参数是方法完成后所执行的函数名称。<br>$(document).ready(function(){<br>  $(“.hidebtn”).click(function(){</p><pre><code>$(&quot;div&quot;).hide(1000,&quot;linear&quot;,function(){  alert(&quot;Hide() 方法已完成!&quot;);});</code></pre><p>  });<br>});</p><p>使用toggle()方法来切换hide()和show()方法。<br>$(“button”).click(function(){<br>  $(“p”).toggle();<br>});</p></li><li><p>jquery的淡入淡出</p><ol><li>fadeIn</li></ol><p>淡淡地浮现出已隐藏的元素。<br>$(selector).fadeIn(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是方法完成后所执行的函数名称。<br>$(“button”).click(function(){<br>  $(“#div1”).fadeIn();<br>  $(“#div2”).fadeIn(“slow”);<br>  $(“#div3”).fadeIn(3000);<br>});</p><ol start="2"><li>fadeOut()</li></ol><p>淡淡地隐藏显示的元素。<br>$(selector).fadeOut(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是方法完成后所执行的函数名称。</p><ol start="3"><li>fadeToggle()</li></ol><p>可以在fadeIn()与fadeOut()方法之间进行切换。<br>如果元素已淡出，则fadeToggle()会向元素添加淡入效果。如果元素已淡入，则fadeToggle()会向元素添加淡出效果。<br>$(selector).fadeToggle(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是方法完成后所执行的函数名称。<br>$(“button”).click(function(){<br>  $(“#div1”).fadeToggle();<br>  $(“#div2”).fadeToggle(“slow”);<br>  $(“#div3”).fadeToggle(3000);<br>});</p></li></ul><ol start="4"><li><p>fadeTo()</p><p>$(selector).fadeTo(speed,opacity,callback);<br>必需的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>fadeTo()方法中必需的opacity参数将淡入淡出效果设置为给定的不透明度（值介于0与1之间）。<br>可选的callback参数是该函数完成后所执行的函数名称。<br>$(“button”).click(function(){<br> $(“#div1”).fadeTo(“slow”,0.15);<br> $(“#div2”).fadeTo(“slow”,0.4);<br> $(“#div3”).fadeTo(“slow”,0.7);<br>});</p></li></ol><ul><li><p>jquery的滑动</p><ol><li>slideDown()</li></ol><p>用于向下滑动元素。<br>$(selector).slideDown(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是滑动完成后所执行的函数名称。<br>$(“#flip”).click(function(){<br>  $(“#panel”).slideDown();<br>});</p><ol start="2"><li>slideUp()</li></ol><p>用于向上滑动元素。<br>$(selector).slideUp(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是滑动完成后所执行的函数名称。</p><ol start="3"><li>slideToggle()</li></ol><p>可以在slideDown()与slideUp()方法之间进行切换。<br>如果元素向下滑动，则slideToggle()可向上滑动它们。如果元素向上滑动，则slideToggle()可向下滑动它们。<br>$(selector).slideToggle(speed,callback);<br>可选的speed参数规定效果的时长。它可以取以下值：”slow”、”fast” 或毫秒。<br>可选的callback参数是滑动完成后所执行的函数名称。<br>$(“#flip”).click(function(){<br>  $(“#panel”).slideToggle();<br>});</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第20天,复习之前，准备考试。</title>
      <link href="/2019/09/02/2019-9-02-night/"/>
      <url>/2019/09/02/2019-9-02-night/</url>
      
        <content type="html"><![CDATA[<br><h4 id="准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。"><a href="#准备之前学过的git命令，vim命令，js，node-js，练习socket聊天室，轮播图准备考试。" class="headerlink" title="准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。"></a>准备之前学过的ｇｉｔ命令，ｖｉｍ命令，ｊｓ，ｎｏｄｅ　ｊｓ，练习ｓｏｃｋｅｔ聊天室，轮播图准备考试。</h4><h2 id="阶段一：8-15-9-05"><a href="#阶段一：8-15-9-05" class="headerlink" title="阶段一：8.15~9.05"></a>阶段一：8.15~9.05</h2><p>安装Linux系统，Linux命令(vim)</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">github</span><br><span class="line"></span><br><span class="line">markdown</span><br><span class="line"></span><br><span class="line">JavaScript(定时器，轮播图)</span><br><span class="line"></span><br><span class="line"><span class="keyword">node</span>.<span class="title">js</span>(socket聊天室)</span><br><span class="line"></span><br><span class="line">TCP/IP</span><br></pre></td></tr></table></figure><h2 id="阶段二：9-05-9-20"><a href="#阶段二：9-05-9-20" class="headerlink" title="阶段二：9.05~9.20"></a>阶段二：9.05~9.20</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">HTML5+CSS3（HTML标签，css样式，布局模式，表格，定位，浮动，弹性盒子，混合布局）（<span class="number">2</span>天，铺京东或淘宝首页<span class="number">80</span>%，不能用定位，<span class="keyword">js和css全部要提取，代码规范，要有注释）</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">Sass,Bootstrap，TensorFlow</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">jQuery</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">ES5,ES6,VUE（小游戏）</span></span><br></pre></td></tr></table></figure><h2 id="阶段三：9-20-11-20"><a href="#阶段三：9-20-11-20" class="headerlink" title="阶段三：9.20~11.20"></a>阶段三：9.20~11.20</h2><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">java/python/PHP </span>选两门</span><br><span class="line"></span><br><span class="line">数据库（MySQL，<span class="keyword">oracle，mangdoDB,redus）</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">主流开发框架 </span>……</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年9月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第18天，jquery的ｃｄｎ</title>
      <link href="/2019/08/31/2019-8-31-eighttn/"/>
      <url>/2019/08/31/2019-8-31-eighttn/</url>
      
        <content type="html"><![CDATA[<br><h4 id="今天考试了之前一些基础，发觉自己已经忘记了许多，所以之后多回忆重视起来。了解了基础的jquery。"><a href="#今天考试了之前一些基础，发觉自己已经忘记了许多，所以之后多回忆重视起来。了解了基础的jquery。" class="headerlink" title="今天考试了之前一些基础，发觉自己已经忘记了许多，所以之后多回忆重视起来。了解了基础的ｊｑｕｅｒｙ。"></a>今天考试了之前一些基础，发觉自己已经忘记了许多，所以之后多回忆重视起来。了解了基础的ｊｑｕｅｒｙ。</h4><p>CDN:目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。</p><h3 id="百度CDN"><a href="#百度CDN" class="headerlink" title="百度CDN:"></a>百度CDN:</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第17天,socket简易聊天室</title>
      <link href="/2019/08/30/2019-8-30-seventn/"/>
      <url>/2019/08/30/2019-8-30-seventn/</url>
      
        <content type="html"><![CDATA[<br><h3 id="日报：看哔哩哔哩视频模仿了一个socket简易本地聊天室-解决个小问题"><a href="#日报：看哔哩哔哩视频模仿了一个socket简易本地聊天室-解决个小问题" class="headerlink" title="日报：看哔哩哔哩视频模仿了一个ｓｏｃｋｅｔ简易本地聊天室,解决个小问题."></a>日报：看哔哩哔哩视频模仿了一个ｓｏｃｋｅｔ简易本地聊天室,解决个小问题.</h3><p>解决了一个错误：</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">Errot:Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'socket.io'</span></span><br></pre></td></tr></table></figure><p>需要安装： <code>npm install socket.io</code>支持包依赖．</p><h3 id="客户端代码："><a href="#客户端代码：" class="headerlink" title="客户端代码："></a>客户端代码：</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>聊天室界面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div &#123;</span><br><span class="line">        border: 1px solid yellow;</span><br><span class="line">        background-color: aqua;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"color: chartreuse"</span>&gt;</span>在下方输入发送内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"text"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://wulv5.com/js/socket.io.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> socket = io.connect(<span class="string">"/"</span>); <span class="comment">//连接聊天室的io 服务器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">"text"</span>);</span></span><br><span class="line"><span class="javascript">        oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="actionscript">        oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> mes = oText.value;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!mes) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            socket.send(mes); <span class="comment">//如果文本框有内容　　　那就发消息去服务器</span></span></span><br><span class="line"><span class="actionscript">            oText.value = <span class="string">""</span>; <span class="comment">//发完消息　　　清空文本框内容</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        socket.on(<span class="string">"message"</span>, <span class="function"><span class="keyword">function</span><span class="params">(mes)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(mes); <span class="comment">//输出服务端发来的消息</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">            div.className = <span class="string">"mes"</span>;</span></span><br><span class="line">            div.innerText = mes;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.body.appendChild(div);</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="服务器代码"><a href="#服务器代码" class="headerlink" title="服务器代码:"></a>服务器代码:</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>);　　 <span class="comment">//引入模块</span></span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>); <span class="comment">//引入　　文件　　系统模块</span></span><br><span class="line"><span class="keyword">var</span> ws = <span class="built_in">require</span>(<span class="string">"socket.io"</span>); <span class="comment">//引入socket.io模块</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> html = fs.readFileSync(<span class="string">"./client.html"</span>);　　　 <span class="comment">//调用fs 模块中的同步读文件方法</span></span><br><span class="line">    res.end(html);</span><br><span class="line">&#125;).listen(<span class="number">3000</span>); <span class="comment">//监听端口</span></span><br><span class="line"><span class="keyword">var</span> io = ws(server); <span class="comment">//  http　服务与ws 服务相关联　　　返回io服务实例</span></span><br><span class="line"></span><br><span class="line">io.on(<span class="string">"connection"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">socket</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//发生在用户链接io服务器的时候</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"有新用户进入"</span>)</span><br><span class="line">        <span class="comment">//接收到客户端的消息</span></span><br><span class="line">    socket.on(<span class="string">"message"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(obj);</span><br><span class="line">        io.emit(<span class="string">"message"</span>, obj) <span class="comment">//发送消息给所有已经连接的客户端　　广播</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第16天,计时器代码，轮播代码</title>
      <link href="/2019/08/29/2019-8-29-sixten/"/>
      <url>/2019/08/29/2019-8-29-sixten/</url>
      
        <content type="html"><![CDATA[<br><h3 id="日报：写了两个计时器的简单代码和轮播图片的简单代码-还是比较急躁-看东西慌乱-不仔细了解其原理-导致今天学习效率较差"><a href="#日报：写了两个计时器的简单代码和轮播图片的简单代码-还是比较急躁-看东西慌乱-不仔细了解其原理-导致今天学习效率较差" class="headerlink" title="日报：写了两个计时器的简单代码和轮播图片的简单代码,还是比较急躁,看东西慌乱,不仔细了解其原理,导致今天学习效率较差."></a>日报：写了两个计时器的简单代码和轮播图片的简单代码,还是比较急躁,看东西慌乱,不仔细了解其原理,导致今天学习效率较差.</h3><p>1.计时器代码setinterval:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"aa"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> vv = setInterval(<span class="string">"cc()"</span>, <span class="number">1000</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">cc</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> f = t.toLocaleTimeString();</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"aa"</span>).value = f;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">ss</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">            clearInterval(vv);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"ss()"</span>&gt;</span>点我停止<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.计时器代码setTimeout:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>如果你想弹窗请点击<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"cc()"</span>&gt;</span>点击开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">cc</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">"弹出啊皮卡丘"</span>)</span></span><br><span class="line">            &#125;, 3000);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.轮播图片的一个简单代码:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/home/yueyang/图片/1.jpg"</span> <span class="attr">id</span>=<span class="string">"pi"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">            setInterval(cho, 2000);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> ii = <span class="number">1</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">cho</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">            ii++;</span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"pi"</span>).src = <span class="string">"/home/yueyang/图片/"</span> + ii + <span class="string">".jpg"</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (ii == <span class="number">4</span>) &#123;</span></span><br><span class="line">                ii = 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十四天，JavaScirpt入门</title>
      <link href="/2019/08/28/2019-8-28-kfiften/"/>
      <url>/2019/08/28/2019-8-28-kfiften/</url>
      
        <content type="html"><![CDATA[<br>日报：学习js的基础刚刚入门<h4 id="来到兄弟会小半月了，感觉每天慌慌的学习，老觉得自己差点学习方法，差点解决问题的能力，总是想要靠别人的帮助，这样总有种不是自己学习的，心里慌，所以下一阶段稳扎稳打，尽自己最大努力干掉所有的烦闷的、和苦恼。敬自己一杯～"><a href="#来到兄弟会小半月了，感觉每天慌慌的学习，老觉得自己差点学习方法，差点解决问题的能力，总是想要靠别人的帮助，这样总有种不是自己学习的，心里慌，所以下一阶段稳扎稳打，尽自己最大努力干掉所有的烦闷的、和苦恼。敬自己一杯～" class="headerlink" title="来到兄弟会小半月了，感觉每天慌慌的学习，老觉得自己差点学习方法，差点解决问题的能力，总是想要靠别人的帮助，这样总有种不是自己学习的，心里慌，所以下一阶段稳扎稳打，尽自己最大努力干掉所有的烦闷的、和苦恼。敬自己一杯～"></a>来到兄弟会小半月了，感觉每天慌慌的学习，老觉得自己差点学习方法，差点解决问题的能力，总是想要靠别人的帮助，这样总有种不是自己学习的，心里慌，所以下一阶段稳扎稳打，尽自己最大努力干掉所有的烦闷的、和苦恼。敬自己一杯～</h4><h4 id="本阶段的任务"><a href="#本阶段的任务" class="headerlink" title="本阶段的任务"></a>本阶段的任务</h4><ol><li>定时器</li><li>选择对象</li><li>改CSS</li><li>创建对象</li><li>弹出框</li><li>流程控制</li><li>浏览器的兼容性的问题</li><li>node.js中只需要学socket模块</li><li>node的需求不是很大，只要那它做一个         即使通讯（聊天室）</li></ol><p><a href="https://www.cnblogs.com/xingyunfashi/p/9272041.html" target="_blank" rel="noopener">notejs的安装</a></p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>note.js安装</title>
      <link href="/2019/08/28/2019-8-28-notejs/"/>
      <url>/2019/08/28/2019-8-28-notejs/</url>
      
        <content type="html"><![CDATA[<br><p>第一种安装方法：</p><p>安装nodejs ：</p><p><code>sudo apt-get install nodejs</code></p><p>运行 nodejs -v 会弹出安装node的版本号</p><p>这里使用的是 nodejs 并不是常用的node ，可以通过</p><p><code>sudo ln -s /usr/bin/nodejs /usr/bin/node</code></p><p>命令让node与nodejs建立软连接，接着就可以使用 node命令</p><p>安装npm:</p><p><code>sudo apt-get install npm</code></p><p>测试安装是否成功: npm -v 弹出安装的版本号，即可证明安装成功</p><p>第二种安装方法：</p><p>先安装，nvm，即是Node Version Manager(Node版本管理器)</p><p><code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh|bash</code><br>或者使用 wget</p><p><code>wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh|bash</code><br>之后需要激活nvm:</p><p><code>source ~/.nvm/nvm.sh</code></p><p>激活完成后，安装node</p><p><code>nvm install node</code></p><p>安装完成后，切换到该版本</p><p><code>nvm use node</code></p><hr><p><a href="https://www.w3cschool.cn/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">w3cschool的详细介绍安装windows版本</a></p><p><a href="https://www.cnblogs.com/xingyunfashi/p/9272041.html" target="_blank" rel="noopener">notejs的安装</a></p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第15天,定时器，选择对象，改css，创建对象，弹出框，流程控制</title>
      <link href="/2019/08/28/2019-8-28-zfiften/"/>
      <url>/2019/08/28/2019-8-28-zfiften/</url>
      
        <content type="html"><![CDATA[<br><h3 id="日报：学习js的操作中；"><a href="#日报：学习js的操作中；" class="headerlink" title="日报：学习js的操作中；"></a>日报：学习js的操作中；</h3><p>1.定时器包含两种：</p><ol><li>setInterval –间隔指定的毫秒数不停地执行指定的代码。</li><li>setTimeout() –在指定的毫秒数后执行指定代码.</li></ol><ul><li>每三秒弹窗一个Hello:<code>setInterval(function(){alert(&quot;Hello&quot;)},3000);</code></li><li>等待3秒弹出Hello:<code>setTimeout(function(){alert(&quot;Hello&quot;)},3000);</code></li></ul><p>2.获取元素：</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"cs"</span>&gt;</span>选择对象操作<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>  <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"cs"</span>).innerHTML=<span class="string">"yisdf"</span>;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.元素选择器；</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">       h1&#123;</span><br><span class="line">           color: aqua;</span><br><span class="line">           font-size: 30px;</span><br><span class="line">           background: peru;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h1</span>&gt;</span>改css的样式<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.创建对象：<br><a href="https://www.runoob.com/js/js-obj-intro.html" target="_blank" rel="noopener">创建对象</a></p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">对象也是一个变量，但对象可以包含多个值（多个变量）。</span><br><span class="line"></span><br><span class="line">`var car = &#123;<span class="string">type:</span><span class="string">"Fiat"</span>, <span class="string">model:</span><span class="number">500</span>, <span class="string">color:</span><span class="string">"white"</span>&#125;;`</span><br></pre></td></tr></table></figure><p>5.弹出框（）：</p><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">setInterval(<span class="name">function</span>()&#123;alert(<span class="string">"hello"</span>)&#125;,<span class="number">1000</span>)<span class="comment">;</span></span><br><span class="line">setTimeout(<span class="name">function</span>()&#123;alert(<span class="string">"Hello"</span>)&#125;,<span class="number">3000</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>6.流程控制：</p><ul><li>if 语句 -  只有当指定条件为 true 时，使用该语句来执行代码</li><li>if…else 语句 - 当条件为 true 时执行代码，当条件为 false 时执行其他代码</li><li>if…else if….else 语句- 使用该语句来选择多个代码块之一来执行<br>switch 语句 - 使用该语句来选择多个代码块之一来执行</li></ul><p>2</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">witch(n)</span><br><span class="line">&#123;</span><br><span class="line">    case 1:</span><br><span class="line">        执行代码块 1</span><br><span class="line">        break;</span><br><span class="line">    case 2:</span><br><span class="line">        执行代码块 2</span><br><span class="line">        break;</span><br><span class="line">    default:</span><br><span class="line">        与 case 1 和 case 2 不同时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.</p><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> - 循环代码块一定的次数</span><br><span class="line"><span class="keyword">for</span>/<span class="keyword">in</span> - 循环遍历对象的属性</span><br><span class="line"><span class="keyword">while</span> - 当指定的条件为 <span class="literal">true</span> 时循环指定的代码块</span><br><span class="line"><span class="keyword">do</span>/<span class="keyword">while</span> - 同样当指定的条件为 <span class="literal">true</span> 时循环指定的代码块</span><br></pre></td></tr></table></figure><p>break 语句可用于跳出循环。</p><p>break 语句跳出循环后，会继续执行该循环之后的代码（如果有的话）：</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime汉化操作</title>
      <link href="/2019/08/27/2019-8-27-sublimeChinese/"/>
      <url>/2019/08/27/2019-8-27-sublimeChinese/</url>
      
        <content type="html"><![CDATA[<br><h2 id="首先进入官网下载sublime，以下链接转到后按照apt下载。"><a href="#首先进入官网下载sublime，以下链接转到后按照apt下载。" class="headerlink" title="首先进入官网下载sublime，以下链接转到后按照apt下载。"></a>首先进入官网下载sublime，以下链接转到后按照apt下载。</h2><p> <a href="https://www.sublimetext.com/docs/3/linux_repositories.html#apt" target="_blank" rel="noopener">sublime官网下载地址</a><br> <br></p><p>1.SublimeText 3菜单栏中，找到“Preference”，在弹出的下拉菜单中找到的“Package Control”,如果没有就ctrl+shift+p，输入PackageContal。<br><br><br>2.打开“package control” ，在弹出的下框输入“install”，搜索会自动联想到“install package”<br>3.等待系统自动搜索完成，弹出安装对话框找到‘ChineseLocalizations’点击就安上了，等待几分钟，界面会出现一大群字符，就会自动换成中文。<br>4.，想要切换会原本的英文状态，在菜单栏中找到“帮助”，在弹出的下拉菜单中，选择“Language”，在弹出的下拉菜单中，选择“English”，不过我相信大家并不会犯傻。</p><h3 id="没看懂可参照-–-汉化过程–操作"><a href="#没看懂可参照-–-汉化过程–操作" class="headerlink" title="没看懂可参照   – 汉化过程–操作"></a>没看懂可参照   – <a href="https://jingyan.baidu.com/article/295430f1878f530c7f005040.html" target="_blank" rel="noopener">汉化过程</a>–操作</h3>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime安装便于写HTML，Css的插件Emmet介绍</title>
      <link href="/2019/08/27/2019-8-27-sublimeHtmlCss/"/>
      <url>/2019/08/27/2019-8-27-sublimeHtmlCss/</url>
      
        <content type="html"><![CDATA[<br><h3 id="1-按住快捷键Ctrl-Shift-P或者在菜单栏选择Perferences–-gt-Package-Control，出现可输入命令行。"><a href="#1-按住快捷键Ctrl-Shift-P或者在菜单栏选择Perferences–-gt-Package-Control，出现可输入命令行。" class="headerlink" title="1.按住快捷键Ctrl+Shift+P或者在菜单栏选择Perferences–&gt;Package Control，出现可输入命令行。"></a>1.按住快捷键Ctrl+Shift+P或者在菜单栏选择Perferences–&gt;Package Control，出现可输入命令行。<br></h3><h3 id="2-找到package-control-install-package，或者在命令面板输入”pcip”即这四个单词的首字母，便会出现新的安装package的面板，搜索emmet找到后点击回车键，会自动安装。"><a href="#2-找到package-control-install-package，或者在命令面板输入”pcip”即这四个单词的首字母，便会出现新的安装package的面板，搜索emmet找到后点击回车键，会自动安装。" class="headerlink" title="2.找到package control install package，或者在命令面板输入”pcip”即这四个单词的首字母，便会出现新的安装package的面板，搜索emmet找到后点击回车键，会自动安装。"></a>2.找到package control install package，或者在命令面板输入”pcip”即这四个单词的首字母，便会出现新的安装package的面板，搜索emmet找到后点击回车键，会自动安装。</h3><br><h3 id="3-最后可通过Perferences–-gt-Package-Settings–-gt-Emmet查看是否成功，如果Emmet在说明安装成功"><a href="#3-最后可通过Perferences–-gt-Package-Settings–-gt-Emmet查看是否成功，如果Emmet在说明安装成功" class="headerlink" title="3.最后可通过Perferences–&gt;Package Settings–&gt;Emmet查看是否成功，如果Emmet在说明安装成功"></a>3.最后可通过Perferences–&gt;Package Settings–&gt;Emmet查看是否成功，如果Emmet在说明安装成功<br></h3><h3 id="最后我们写代码只需要“！tab”就会自动生成。写标签等都会很方便。"><a href="#最后我们写代码只需要“！tab”就会自动生成。写标签等都会很方便。" class="headerlink" title="最后我们写代码只需要“！tab”就会自动生成。写标签等都会很方便。"></a>最后我们写代码只需要“！tab”就会自动生成。写标签等都会很方便。</h3><h2 id="若没看明白还可详见～此处"><a href="#若没看明白还可详见～此处" class="headerlink" title="若没看明白还可详见～此处"></a><a href="https://jingyan.baidu.com/article/ce43664935b90c3772afd377.html" target="_blank" rel="noopener">若没看明白还可详见～此处</a></h2>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第11天liunx的测试</title>
      <link href="/2019/08/27/2019-8-27-%E6%B5%8B%E8%AF%95liunx%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/08/27/2019-8-27-%E6%B5%8B%E8%AF%95liunx%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<br>日报：考完linux命令，感觉还是了解不全面，继续加油<h3 id="linux常用命令学习了小50个，里面分有许多不同的小点吧，但是大部分都了解；还是得加油，继续～"><a href="#linux常用命令学习了小50个，里面分有许多不同的小点吧，但是大部分都了解；还是得加油，继续～" class="headerlink" title="linux常用命令学习了小50个，里面分有许多不同的小点吧，但是大部分都了解；还是得加油，继续～"></a>linux常用命令学习了小50个，里面分有许多不同的小点吧，但是大部分都了解；还是得加油，继续～</h3>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十天liunx学习60%</title>
      <link href="/2019/08/26/2019-8-26-ten/"/>
      <url>/2019/08/26/2019-8-26-ten/</url>
      
        <content type="html"><![CDATA[<br>日报：今天打鸡血的的学习linux命令，继续look下去；<h3 id="Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。实际上Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。不仅如此，Shell有自己的编程语言用于对命令的编辑，它允许用户编写由shell命令组成的程序。Shell编程语言具有普通编程语言的很多特点，比如它也有循环结构和分支控制结构等，用这种编程语言编写的Shell程序与其他应用程序具有同样的效果。"><a href="#Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。实际上Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。不仅如此，Shell有自己的编程语言用于对命令的编辑，它允许用户编写由shell命令组成的程序。Shell编程语言具有普通编程语言的很多特点，比如它也有循环结构和分支控制结构等，用这种编程语言编写的Shell程序与其他应用程序具有同样的效果。" class="headerlink" title="Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。实际上Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。不仅如此，Shell有自己的编程语言用于对命令的编辑，它允许用户编写由shell命令组成的程序。Shell编程语言具有普通编程语言的很多特点，比如它也有循环结构和分支控制结构等，用这种编程语言编写的Shell程序与其他应用程序具有同样的效果。"></a>Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。实际上Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。不仅如此，Shell有自己的编程语言用于对命令的编辑，它允许用户编写由shell命令组成的程序。Shell编程语言具有普通编程语言的很多特点，比如它也有循环结构和分支控制结构等，用这种编程语言编写的Shell程序与其他应用程序具有同样的效果。</h3>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第九天linux用户-权限命令，常用文件与文件夹命令，防火墙命令</title>
      <link href="/2019/08/23/2019-8-23-nine/"/>
      <url>/2019/08/23/2019-8-23-nine/</url>
      
        <content type="html"><![CDATA[<h4 id="第9天日报"><a href="#第9天日报" class="headerlink" title="第9天日报"></a>第9天日报</h4><ul><li>操作命令又仔细的看了看，了解的更加详细；</li></ul><h2 id="1-用户-权限命令"><a href="#1-用户-权限命令" class="headerlink" title="1. 用户-权限命令"></a>1. <a href="https://www.cnblogs.com/wojiaxiaoguo/p/9302228.html" target="_blank" rel="noopener">用户-权限命令</a></h2><h2 id="2-常用文件和文件夹命令"><a href="#2-常用文件和文件夹命令" class="headerlink" title="2.常用文件和文件夹命令"></a>2.<a href="https://jingyan.baidu.com/article/656db918c10732e380249c65.html" target="_blank" rel="noopener">常用文件和文件夹命令</a></h2><h2 id="3-防火墙命令"><a href="#3-防火墙命令" class="headerlink" title="3.防火墙命令"></a>3.<a href="https://yq.aliyun.com/articles/704879" target="_blank" rel="noopener">防火墙命令</a></h2><br><h3 id="linux常见的20条命令"><a href="#linux常见的20条命令" class="headerlink" title="linux常见的20条命令"></a><a href="https://blog.csdn.net/q357010621/article/details/80248611" target="_blank" rel="noopener">linux常见的20条命令</a></h3>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu的wps安装字体问题解决</title>
      <link href="/2019/08/23/2019-8-23-wpsinstall/"/>
      <url>/2019/08/23/2019-8-23-wpsinstall/</url>
      
        <content type="html"><![CDATA[<h4 id="安装wps的小问题加上了解了一些html与css"><a href="#安装wps的小问题加上了解了一些html与css" class="headerlink" title="安装wps的小问题加上了解了一些html与css"></a>安装wps的小问题加上了解了一些html与css</h4><h3 id="此处下载ubuntu11-1-0版本wps"><a href="#此处下载ubuntu11-1-0版本wps" class="headerlink" title="此处下载ubuntu11.1.0版本wps"></a>此处下载ubuntu11.1.0版本wps<br></h3><p><a href="https://www.wps.cn/product/wpslinux" target="_blank" rel="noopener">ubuntu11.1.0下载链接</a></p><ul><li>下载完成后安装上使用时可能会发生字体缺少，此时需下载字体包  </li></ul><h3 id="字体包下载地址"><a href="#字体包下载地址" class="headerlink" title="字体包下载地址"></a><a href="https://pan.baidu.com/s/1o8ujqhc" target="_blank" rel="noopener">字体包下载地址</a></h3><ul><li>下载完成之后，解压并且进入目录中，将字体复制到 /usr/share/fonts中，此时直接复制过去它说权限不够：<br></li></ul><p>1.我们进入此目录:<code>cd /usr/share/fonts</code><br><br>2.把刚下载的那个语言包右键属性看地址移动到 /usr/share/fonts中：<code>sudo mv /tmp/mozilla_yueyang0/wps_symbol_fonts /usr/share/fonts</code><br>3.执行下面的命令，生成字体的索引信息：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> sudo mkfontscale</span><br><span class="line"> sudo mkfontdir</span><br><span class="line">sudo <span class="built_in">fc</span>-cache</span><br></pre></td></tr></table></figure><p>4 重启wps即可，字体缺失的提示不再出现.</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ安装步骤</title>
      <link href="/2019/08/22/2019-8-22-QQinstall/"/>
      <url>/2019/08/22/2019-8-22-QQinstall/</url>
      
        <content type="html"><![CDATA[<p>直接在命令行执行以下几部：<br></p><p>1.安装 wine</p><ul><li><p>git clone <a href="https://gitee.com/wszqkzqk/" target="_blank" rel="noopener">https://gitee.com/wszqkzqk/</a> deepin-wine-for-ubuntu.git</p></li><li><p>cd deepin-wine-for-ubuntu </p></li><li><p>sudo sh install.sh</p></li></ul><p>2.安装 QQ</p><ul><li>wget <a href="http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/deepin.com.qq.im_8.9.19983deepin23_i386.deb" target="_blank" rel="noopener">http://mirrors.aliyun.com/deepin/pool/non-free/d/deepin.com.qq.im/deepin.com.qq.im_8.9.19983deepin23_i386.deb</a></li><li>sudo dpkg -i deepin.com.qq.im_8.9.19983deepin23_i386.deb </li><li>sudo apt-get install -f</li></ul>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim和linux操作命令(链接一个简洁博客)</title>
      <link href="/2019/08/22/2019-8-22-eight/"/>
      <url>/2019/08/22/2019-8-22-eight/</url>
      
        <content type="html"><![CDATA[<h3 id="第八天日报"><a href="#第八天日报" class="headerlink" title="第八天日报"></a>第八天日报</h3><ul><li>了解vim和linux操作基础</li></ul><h2 id="看着简洁明了并且常见的多的命令～"><a href="#看着简洁明了并且常见的多的命令～" class="headerlink" title="看着简洁明了并且常见的多的命令～"></a><a href="https://blog.csdn.net/tianzongnihao/article/details/80539264" target="_blank" rel="noopener">看着简洁明了并且常见的多的命令～</a></h2><h3 id="vim操作命令详解"><a href="#vim操作命令详解" class="headerlink" title="vim操作命令详解"></a><a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noopener">vim操作命令详解</a></h3><h3 id="linux常见的20条命令"><a href="#linux常见的20条命令" class="headerlink" title="linux常见的20条命令"></a><a href="https://blog.csdn.net/q357010621/article/details/80248611" target="_blank" rel="noopener">linux常见的20条命令</a></h3>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第7天git亲手操作</title>
      <link href="/2019/08/21/2019-8-21-git%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/08/21/2019-8-21-git%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h3 id="一套简单流程"><a href="#一套简单流程" class="headerlink" title="一套简单流程"></a>一套简单流程</h3><ol><li><p>建个叫兄弟连的文件夹：<code>mkdir  兄弟连</code></p></li><li><p>进入文件并初始化：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 兄弟连</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></li><li><p>创建文件以时间命名:<code>vi   2018-08-21.md</code></p></li><li><p>修改文件内容：<code>vi  2018-08-21.md</code>进入修改内容，按esc加大写ZZ退出<br>5 .  跟踪提交：</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">git status</span><br><span class="line">git <span class="keyword">add</span><span class="bash"> .</span></span><br><span class="line">git commit -m <span class="string">'1'</span></span><br></pre></td></tr></table></figure></li></ol><p>6 .  去github建立一个新仓库取名1978413822.git.io.git<br><br>7.添加刚刚增加的远程仓库：<code>git  remote  add 自己取个名    git@github.com:1978413822/1978413822.git.io.git</code><br><br>8  . 创建并切换到test分支：<code>git checkout -b  test</code><br><br>9.改掉文件名字: <code>git  mv   2018-08-21.md (此处老名字)  2018-08-21-git.md（此处新名字）</code> <br><br>10 . 推test分支：<code>git push -u  第七步里面取的别名（向上看）test:test</code><br><br>11 .  到主分支：<code>git  checkout master</code><br><br>12.查看远程仓库并查看差异：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-  git fetch  还是上面取得别名  <span class="built_in">test</span>    <span class="comment"># 这里同步的是test分支</span></span><br><span class="line">-  git  diff   <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>13.合并分支：git merge  test<br>14 . 推主分支到github库：<code>git push  -u  别名  master</code><br><br>15.添加标签：<code>git  tag   v1.0</code><br><br>16 . 将v1.0版本推上去：<code>git push  -u  别名  1.0</code><br><br>17.查看远程仓库地址：<code>git  remote  -v</code><br><br>18.创建分支并切换：<code>git  checkout  -b  test2</code><br><br>19 .修改文件写个内容<code>vi    2018-08-21-git.md</code><br><br>20.添加标签：<code>git tag v2.0</code><br>21.推v2。0版本：</p><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">git  add .</span><br><span class="line">git  commit  -m 'v2.<span class="number">0</span>标签'</span><br><span class="line">git  push -u  别名  v2。<span class="number">0</span></span><br><span class="line">```    </span><br><span class="line"><span class="number">22</span>.查看远程仓库地址：`git  remote  -v`    </span><br><span class="line"><span class="number">23</span>.回滚到上一个版本：</span><br></pre></td></tr></table></figure><p>git reflog<br>git reset  –hard  加上哈希马值</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>push不到远程仓库</title>
      <link href="/2019/08/21/2019-8-21-seven/"/>
      <url>/2019/08/21/2019-8-21-seven/</url>
      
        <content type="html"><![CDATA[<p>以下是各种push不上去后的最后拯救</p><blockquote><ul><li>写入目录文件，建立空仓，<code>git remote add 别名  远仓地址</code>，然后改写一些文件内容，git add  . 然后<code>git commit -m &#39;11&#39;</code>之后个git push -u origin master 出错。## 这下多半是密钥出错了，需要重新配置密钥，</li></ul></blockquote><h1 id="ssh-keygen-t-rsa-C-“邮箱地址”，cat-ssh-id-rsa-pub查看密钥，然后粘贴到github中的密钥区域既可。"><a href="#ssh-keygen-t-rsa-C-“邮箱地址”，cat-ssh-id-rsa-pub查看密钥，然后粘贴到github中的密钥区域既可。" class="headerlink" title="ssh-keygen -t rsa  - C “邮箱地址”，cat ~/.ssh/id_rsa.pub查看密钥，然后粘贴到github中的密钥区域既可。"></a>ssh-keygen -t rsa  - C “邮箱地址”，cat ~/.ssh/id_rsa.pub查看密钥，然后粘贴到github中的密钥区域既可。</h1>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语句</title>
      <link href="/2019/08/20/2019-8-20-markdown/"/>
      <url>/2019/08/20/2019-8-20-markdown/</url>
      
        <content type="html"><![CDATA[<p>![markdown](/home/yueyang/图片/2019-08-23 09-15-43 的屏幕截图.png)</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第6天 gitbisect</title>
      <link href="/2019/08/20/2019-8-20-six/"/>
      <url>/2019/08/20/2019-8-20-six/</url>
      
        <content type="html"><![CDATA[<blockquote><h3 id="git-bisect是一个很有用的命令，用来查找哪一次代码提交引入了错误。"><a href="#git-bisect是一个很有用的命令，用来查找哪一次代码提交引入了错误。" class="headerlink" title="git bisect是一个很有用的命令，用来查找哪一次代码提交引入了错误。"></a>git bisect是一个很有用的命令，用来查找哪一次代码提交引入了错误。</h3></blockquote><ul><li>它的原理很简单，就是将代码提交的历史，按照两分法不断缩小定位。所谓”两分法”，就是将代码历史一分为二，确定问题出在前半部分，还是后半部分，不断执行这个过程，直到范围缩小到某一次代码提交。<ol><li>首先，进入错误了的目录检查一下代码提交历史<code>git log --pretty=oneline</code><br><code>git bisect start</code>命令启动查错，它的格式如下:<code>git bisect start [终点] [起点]</code>起点终点是哈西马值，它会定位到中间位置，不断测试，没错标记<code>git bisect good</code>之后继续二分查找，直到找到错误加<code>git bisect bad</code><br>这时，Git 会给出如下的提示:<code>错误处的哈希马值 is the first bad commit</code>，既然找到了错误，那我们就可以使用<code>git bisect reset</code>退出查错，去修改错误就ok。</li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第5天 配ssh钥匙</title>
      <link href="/2019/08/19/2019-8-19-five/"/>
      <url>/2019/08/19/2019-8-19-five/</url>
      
        <content type="html"><![CDATA[<p>日报：github设置ssh公钥</p><ul><li><h2 id="设置git配置ssh钥匙：ssh-keygen-t-rsa-C-quot-example-qq-com-quot-会在文件生成一个隐藏-ssh文件-可以将其中含pub后缀的公钥复制到github公钥区。"><a href="#设置git配置ssh钥匙：ssh-keygen-t-rsa-C-quot-example-qq-com-quot-会在文件生成一个隐藏-ssh文件-可以将其中含pub后缀的公钥复制到github公钥区。" class="headerlink" title="设置git配置ssh钥匙：ssh-keygen -t rsa -C &quot;example@qq.com&quot; 会在文件生成一个隐藏.ssh文件,可以将其中含pub后缀的公钥复制到github公钥区。"></a>设置git配置ssh钥匙：<code>ssh-keygen -t rsa -C &quot;example@qq.com&quot;</code> 会在文件生成一个隐藏.ssh文件,可以将其中含pub后缀的公钥复制到github公钥区。</h2><ul><li>也可命令行用<code>cat ~/.ssh/id_rsa.pub</code>查看公钥内容，将内容复制到github设置区内的ssh公钥区内部。</li><li>将本地的http的库删除，然后：<code>git clone git@github.com:你的账号/库名.git</code><br><ul><li>最后ssh-add ~/.ssh/id-rsa<br></li></ul></li></ul></li></ul><hr><h2 id="图片模糊请点击此处～"><a href="#图片模糊请点击此处～" class="headerlink" title="图片模糊请点击此处～"></a><a href="https://image.baidu.com/search/detail?ct=503316480&z=0&ipn=d&word=git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%9B%BE%E7%89%87&hs=2&pn=0&spn=0&di=880&pi=0&rn=1&tn=baiduimagedetail&is=0%2C0&ie=utf-8&oe=utf-8&cl=2&lm=-1&cs=3047861551%2C3650154240&os=3002374854%2C172693353&simid=3368731720%2C3301162518&adpicid=0&lpn=0&ln=30&fr=ala&fm=&sme=&cg=&bdtype=0&oriquery=git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%9B%BE%E7%89%87&objurl=http%3A%2F%2Fimages.cnitblog.com%2Fblog%2F411432%2F201409%2F041038040946407.jpg&fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3Bvgks52f_z%26e3Bv54AzdH3Foi5w44jAzdH3FrAzdH3Fncn8nb0_z%26e3Bip4s&gsm=0&islist=&querylist=" target="_blank" rel="noopener">图片模糊请点击此处～</a></h2><p><img src="https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3047861551,3650154240&fm=26&gp=0.jpg" alt="shangtu"></p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第4天 熟悉分支与markdown基操与gitgub多人协作</title>
      <link href="/2019/08/18/2019-8-18-four/"/>
      <url>/2019/08/18/2019-8-18-four/</url>
      
        <content type="html"><![CDATA[<p>github多人协作，创建一个新的远程仓库，</p><blockquote><h3 id="准确知道指定分支的创建时间"><a href="#准确知道指定分支的创建时间" class="headerlink" title="准确知道指定分支的创建时间"></a>准确知道指定分支的创建时间</h3><p><code>git reflog show --date=iso master</code></p></blockquote><br>---- 删除分枝 `git branch -d`加分支名<br>- 如果一个分支未进行合并，Git可能会阻止对它的删除，不过也可以强制删除:`git branch -D `加分支名<br>- 恢复操作：非常的简单，只要以was后面的字符为对象为基础再创建一个分支即可：例：git branch newBr a12fds<ul><li><p>git mv old new 文件改名。</p><ul><li>查看文件详细修改信息<code>git reflog --date=iso master</code><br>=》git log也可</li><li><code>git log --oneline</code></li></ul></li><li><p>看一下提交历史记录 git log –oneline </p></li><li><p>撤销工作目录中所有没提交文件的修改内容<code>git  reset --hard HEAD</code></p></li><li><p>撤销指定内容提交<code>git revert &lt;commit&gt;</code></p></li><li><p><code>git rm --cached</code>加文件名  将暂存区中的内容删除，工作区内容不受影响</p></li><li><p><code>git rm</code>加文件名 不但暂存区中的内容没了，工作区的对应文件也会被删除，比较彻底。</p></li><li><p>ls  显示当前库中文件<br> ls -l  显示详细信息</p></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/4193138-1bd30006f0a00cbd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000" alt="tu"></p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第3天 读看progit基础</title>
      <link href="/2019/08/17/2019-8-17-three/"/>
      <url>/2019/08/17/2019-8-17-three/</url>
      
        <content type="html"><![CDATA[<p><a href="https://gitee.com/progit/2-Git-%E5%9F%BA%E7%A1%80.html" target="_blank" rel="noopener">git基础的链接可随时参阅</a></p><ul><li>cd进入要更改的文件地址,但放桌面便于修改 语法:convert -riz 128x128(像素的大小) 图片名.格式 改后图片名.格式 </li></ul><ul><li><p>$ git init 文件名字  在文件夹建一个新仓库</p></li><li><p>找到目录下隐藏的 .git语句：$ ls -a<br>##关于git命令的一些使用方法</p></li></ul><blockquote><p>1、gitignore规则不生效<br>.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修&gt;&gt;&gt;&gt; &gt; 改.gitignore是无效的。<br>解决方法就是先把本地缓存删除（改变成未track状态），然后再提交:<br>git rm -r –cached .<br>git add .<br>git commit -m ‘update .gitignore’</p></blockquote><blockquote><p>2、git忽略某个指定的文件(不从版本库中删除)<br>执行命令如下：<br>git update-index –assume-unchanged config.conf<br>用git status查看一下，已经得到了自己想要的效果</p></blockquote><blockquote><p>3、git取消忽略某个指定的文件<br>git update-index –no-assume-unchanged config.conf</p></blockquote><blockquote><p>4、将当前版本回退到上一个版本，命令如下：<br>git reset –hard HEAD^</p></blockquote><blockquote><p>5、 回退到上两个版本<br>git reset – hard HEAD^^</p></blockquote><blockquote><p>6、回退到指定版本<br>git log //显示从最近到最远的提交日志<br>git reset –hard commit_id //回退到指定版本</p></blockquote><blockquote><p>7、查看命令历史<br>git reflog</p></blockquote><blockquote><p>8、拉取暂存区文件并将其替换成工作区文件<br>gitcheckout– <file></file></p></blockquote><blockquote><p>9、跟踪取消，即把文件从git中拿出来，不再进行版本跟踪，但保留工作区的文件。<br>git rm - - cached filename</p></blockquote><blockquote><p>10、查看工作区和版本库里面最新版本的区别<br>git diff HEAD – readme.txt<br>git diff命令比较的是工作目录中当前文件与暂存区快照之间的差异，也就是修改之后还没有暂存起来的&gt;变化内容</p></blockquote><blockquote><p>11、将工作去的内容放入版本库的暂存区<br>git add readme.txt</p></blockquote><blockquote><p>12、将暂存区的内容提交到当前分支<br>git commit -m “git tracks changes”</p></blockquote><blockquote><p>13、显示工作目录和暂存区的状态<br>git status</p></blockquote><blockquote><p>14、删除一个文件<br>git rm test.txt</p></blockquote><blockquote><p>15、从远程库克隆项目<br>git clone 项目地址</p></blockquote><blockquote><p>16、创建分支，然后切换到分支<br>git checkout -b dev<br>git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：<br>git branch dev<br>git checkout dev</p></blockquote><blockquote><p>17、查看当前分支<br>git branch<br>git branch命令会列出所有分支，当前分支前面会标一个*号</p></blockquote><blockquote><p>18、git merge命令用于合并指定分支到当前分支<br>git merge dev</p></blockquote><blockquote><p>19、删除本地分支<br>git branch -d dev</p></blockquote><blockquote><p>20、删除远程dev分支<br>git push origin :dev</p></blockquote><blockquote><p>21、切换分支<br>git checkout <name></name></p></blockquote><blockquote><p>22、查看远程库的信息<br>git remote 或 git remote -v</p></blockquote><blockquote><p>23、推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就&gt; 会<br>把该分支推送到远程库对应的远程分支上：<br>git push origin master<br>如果要推送其他分支，比如dev，就改成：<br>git push origin dev</p></blockquote><blockquote><p>24、拉取分支<br>git pull<br><img src="/%E5%9B%BE%E7%89%87/git.jpeg" alt="git"><br><img src="https://ss2.baidu.com/6ONYsjip0QIZ8tyhnq/it/u=1316558249,4166498099&fm=173&app=49&f=JPEG?w=640&h=640&s=728331641C7327B754195C990000A093" alt="git"><br><img src="https://gitee.com/progit/" alt="progit"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1565979126986&di=81bcff9f641a93a5ab74056759354e7a&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201811%2F10%2F20181110102046_upwmj.thumb.700_0.jpg" alt="avatar"></p></blockquote><p>现在可以于<a href="/config/infor.html">主题配置</a>处检查配置项，如配置正确可删除<code>/config/infor.html</code>文件</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第2天：安装vscode和插入图片markdown语法</title>
      <link href="/2019/08/16/2019-8-16-two/"/>
      <url>/2019/08/16/2019-8-16-two/</url>
      
        <content type="html"><![CDATA[<p>安装了一个vscode写markdown的软件安装汉化包使用～100%</p><p>制作博客基本功能有了，页面完成太丑～60%<br>  <a href="https://www.w3cschool.cn/markdownyfsm/markdownyfsm-odm6256r.html" target="_blank" rel="noopener">没看懂的还可以去这里～</a></p><p>markdown语法<a href="https://www.w3cschool.cn/markdownyfsm/markdownyfsm-odm6256r.html" target="_blank" rel="noopener">markdown语法详细介绍链接</a></p><ul><li>创建文件夹到我的电脑<br>mkdir  文件名<br> touch newText.txt<ul><li>创建文档 vi  tough  </li></ul></li><li>1插入图片![Alt text]加(图片链接 )</li></ul><ul><li>2插入本地图:只需要在基础语法的括号中填入图片的位置路径即可，支持绝对路径和相对路径。<blockquote><p>例如：![avatar]加(/home/picture/1.png)</p></blockquote></li></ul><ul><li>3.插入网络图片:只需要在基础语法的括号中填入图片的网络链接即可，现在已经有很多免费/收费图床和方便传图的小&gt;工具可选。<blockquote><p>例如：’![avatar]加(<a href="http://baidu.com/pic/doge.png)&#39;" target="_blank" rel="noopener">http://baidu.com/pic/doge.png)&#39;</a></p></blockquote></li></ul><ul><li>4.插入网络图片<blockquote><p>只需要在基础语法的括号中填入图片的网络链接即可.<br>例如：![avatar]加(<a href="http://baidu.com/pic/doge.png" target="_blank" rel="noopener">http://baidu.com/pic/doge.png</a>) 此方法很注重网络,将图放在网络服务器上</p><ol start="3"><li>修复Chrome地址栏主题色不同步问题<br><img src="https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3148600692,342429503&fm=26&gp=0.jpg" alt="avatar"></li></ol></blockquote></li></ul><p>现在可以于<a href="/config/infor.html">主题配置</a>处检查配置项，如配置正确可删除<code>/config/infor.html</code>文件</p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux安装和创建git与github连接</title>
      <link href="/2019/08/14/2019-8-14-hello-world/"/>
      <url>/2019/08/14/2019-8-14-hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="欢迎来到我的博客！"><a href="#欢迎来到我的博客！" class="headerlink" title="欢迎来到我的博客！"></a>欢迎来到我的博客！<br></h2><p><font size="1">第一天的一些问题：</font><a href="https://gitee.com/progit/1-%E8%B5%B7%E6%AD%A5.html#1.3-Git-%E5%9F%BA%E7%A1%80" target="_blank" rel="noopener">没看懂的还可以去这里～</a></p><p>1.在u盘里下ubuntu<br>需要去Ubuntu官网下载镜像文件，下载的是Ubuntu 18.04<br>下载软碟通（UltralSO）刻录工具<br>插上U盘，打开软碟通制作启动盘<br>a点击文件，选择打开，找到下载的Ubuntu镜像并打开<br>点击启动，选择写入硬盘映像<br>写入方式一般选择HDD或者HDD+<br>点击“便捷启动”，在弹出的菜单中选择“写入新的驱动器引导扇区”，再选择“Syslinux”<br>点击“写入”按钮开始U盘启动盘制作</p><blockquote><p>首先安装linux系统遇到了黑屏，是应当再次重启动电脑按f12进入选择ste bios进入将私有的的改为公共的。<br>  注册github时接收验证码千万不要多次点击，否则会发送超多的验证码导致一直验证不成功。<br>在 Ubuntu 这类 Debian 体系的系统上，可以用命令 apt-get install git安装：<br>用命令行窗口创建git时需要sudo apt-get install git,之后可能缺少依赖关系需要写sudo apt-git update。</p></blockquote><p>2.</p><blockquote><p>在创建github项目后 在命令行： git clone <a href="https://github.com/username/username.github.io" target="_blank" rel="noopener">https://github.com/username/username.github.io</a><br>去jekylltheams.org找个模板放到与github关联文件里<br>git add –all<br>git commit -m “Initial commit”<br>git push -u origin master传递上去即可，根据自己的感觉修改模板，反正我是没咋看懂。</p></blockquote><p><img src="https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=2836639752,885871303&fm=26&gp=0.jpg" alt="ubuntu"><br><img src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1565960589661&di=b7d148815132bac6ec42af3ce395ea36&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201503%2F13%2F20150313081624_5LiWk.jpeg" alt="avatar"></p>]]></content>
      
      
      <categories>
          
          <category> 19年8月 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术文档 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
